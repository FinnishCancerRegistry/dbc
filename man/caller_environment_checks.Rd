% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/manually_written_caller_environment_check_funs.R
\name{caller_environment_checks}
\alias{caller_environment_checks}
\alias{report_function_caller_environment_is_not_global_environment}
\alias{report_function_caller_environment_is_global_environment}
\alias{assert_function_caller_environment_is_not_global_environment}
\alias{assert_function_caller_environment_is_global_environment}
\alias{test_function_caller_environment_is_not_global_environment}
\alias{test_function_caller_environment_is_global_environment}
\title{Caller Environment Checks}
\usage{
report_function_caller_environment_is_not_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL
)

report_function_caller_environment_is_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL
)

assert_function_caller_environment_is_not_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL,
  assertion_type = dbc::assertion_type_default()
)

assert_function_caller_environment_is_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL,
  assertion_type = dbc::assertion_type_default()
)

test_function_caller_environment_is_not_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL
)

test_function_caller_environment_is_global_environment(
  x = NULL,
  x_nm = NULL,
  call = NULL
)
}
\arguments{
\item{x}{\verb{[NULL, environment]} (default \code{NULL})
\itemize{
\item \code{environment}: this environment is compared against \verb{[globalenv]} output
\item \code{NULL}: \code{x} is taken to be \code{parent.frame(2L)} in the check function,
which should be the caller environment of the function you are trying
to check; See \strong{Examples}
}}

\item{x_nm}{\verb{[NULL, character]} (default \code{NULL})
\itemize{
\item \code{NULL}: The name of the function you are checking is guessed from
\code{dbc::get_parent_call()} output
\item \code{character}: This should be the name of the function you are checking.
}}

\item{call}{\verb{[language, NULL]} (optional, default \code{NULL})
\itemize{
\item \code{language}: an R language object such as one produced by \link{match.call} or
\code{quote}; this call will be reported in an error
\item \code{NULL}: the call is attempted to be inferred
}}

\item{assertion_type}{\verb{[character]}
(default usually \code{"general"})

Must be exactly one of the following:
\itemize{
\item \code{"general"}: just says that assertions did not pass without information
as to whose fault this was --- just that some object was not as expected
\item \code{"input"}: assertion error messages direct the attention towards the
inputs (arguments) of guilty function
\item \code{"user_input"}: the end-user is directed to adjust their arguments.
\item \code{"prod_input"}: the assertion error is considered to be an internal error,
and the end-user is directed to report it; the inputs of some function
were not as expected
\item \code{"dev_input"}: only the developer is notified (see
\verb{[dbc::set_dev_mode]})
\item \code{"prod_output"}: like \code{"prod_input"}, but the output of some function
was not as expected
\item \code{"dev_output"}: like \code{"prod_output"}, but only raised in development mode
(see \verb{[dbc::set_dev_mode]})
\item \code{"prod_interim"}: like \code{"prod_input"}, but the interim result somewhere
was not as expected
\item \code{"dev_interim"}: like \code{"prod_interim"}, but only raised in development mode
(see \verb{[dbc::set_dev_mode]})
\item \code{"none"}: added for convenience, this means that the assertion is not performed
}}
}
\description{
Functions to check caller environment of a function.
}
