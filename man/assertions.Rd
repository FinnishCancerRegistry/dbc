% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions_doc_page.R,
%   R/expr_based.R, R/generated_assert_is_funs.R,
%   R/generated_base_report_funs.R, R/generated_dev_input_assertion_funs.R,
%   R/generated_dev_interim_assertion_funs.R,
%   R/generated_dev_output_assertion_funs.R,
%   R/generated_general_assertion_funs.R, R/generated_input_assertion_funs.R,
%   R/generated_prod_input_assertion_funs.R,
%   R/generated_prod_interim_assertion_funs.R,
%   R/generated_prod_output_assertion_funs.R, R/generated_report_fun_variants.R,
%   R/generated_test_funs.R, R/generated_user_input_assertion_funs.R,
%   R/manually_written_dataset_check_funs.R,
%   R/manually_written_is_one_of_check_funs.R, R/manually_written_report_funs.R
\name{assertions}
\alias{assertions}
\alias{report_is}
\alias{assert_is}
\alias{assert_input_is}
\alias{assert_user_input_is}
\alias{assert_prod_input_is}
\alias{assert_dev_input_is}
\alias{assert_prod_output_is}
\alias{assert_dev_output_is}
\alias{assert_prod_interim_is}
\alias{assert_dev_interim_is}
\alias{report_all_are_TRUE}
\alias{report_atom_is_in_set}
\alias{report_dir_exists}
\alias{report_file_exists}
\alias{report_has_class}
\alias{report_has_length}
\alias{report_has_names}
\alias{report_has_no_duplicates}
\alias{report_has_one_of_classes}
\alias{report_has_only_names}
\alias{report_inherits}
\alias{report_is_assertion_type}
\alias{report_is_atom}
\alias{report_is_between_exclusive}
\alias{report_is_between_inclusive}
\alias{report_is_call}
\alias{report_is_character}
\alias{report_is_data.frame}
\alias{report_is_data.frame_with_required_names}
\alias{report_is_data.table}
\alias{report_is_data.table_with_required_names}
\alias{report_is_data_table}
\alias{report_is_data_table_with_required_names}
\alias{report_is_Date}
\alias{report_is_double}
\alias{report_is_environment}
\alias{report_is_expression}
\alias{report_is_factor}
\alias{report_is_factor_with_levels}
\alias{report_is_function}
\alias{report_is_function_with_required_argument_names}
\alias{report_is_gt}
\alias{report_is_gte}
\alias{report_is_gtezero}
\alias{report_is_gtzero}
\alias{report_is_integer}
\alias{report_is_language_object}
\alias{report_is_list}
\alias{report_is_logical}
\alias{report_is_lt}
\alias{report_is_lte}
\alias{report_is_ltezero}
\alias{report_is_ltzero}
\alias{report_is_matrix}
\alias{report_is_name}
\alias{report_is_named}
\alias{report_is_named_list}
\alias{report_is_nonNA}
\alias{report_is_NULL}
\alias{report_is_number}
\alias{report_is_numeric}
\alias{report_is_of_length}
\alias{report_is_TRUE}
\alias{report_is_uniquely_named}
\alias{report_is_uniquely_named_list}
\alias{report_is_vector}
\alias{report_match_regex}
\alias{report_vector_elems_are_in_set}
\alias{assert_dev_input_all_are_TRUE}
\alias{assert_dev_input_atom_is_in_set}
\alias{assert_dev_input_dir_exists}
\alias{assert_dev_input_file_exists}
\alias{assert_dev_input_has_class}
\alias{assert_dev_input_has_length}
\alias{assert_dev_input_has_names}
\alias{assert_dev_input_has_no_duplicates}
\alias{assert_dev_input_has_one_of_classes}
\alias{assert_dev_input_has_only_names}
\alias{assert_dev_input_has_only_valid_observations}
\alias{assert_dev_input_inherits}
\alias{assert_dev_input_is_assertion_type}
\alias{assert_dev_input_is_atom}
\alias{assert_dev_input_is_between_exclusive}
\alias{assert_dev_input_is_between_inclusive}
\alias{assert_dev_input_is_call}
\alias{assert_dev_input_is_character}
\alias{assert_dev_input_is_character_atom}
\alias{assert_dev_input_is_character_matrix}
\alias{assert_dev_input_is_character_nonNA_atom}
\alias{assert_dev_input_is_character_nonNA_matrix}
\alias{assert_dev_input_is_character_nonNA_vector}
\alias{assert_dev_input_is_character_vector}
\alias{assert_dev_input_is_data.frame}
\alias{assert_dev_input_is_data.frame_with_required_names}
\alias{assert_dev_input_is_data.table}
\alias{assert_dev_input_is_data.table_with_required_names}
\alias{assert_dev_input_is_data_table}
\alias{assert_dev_input_is_data_table_with_required_names}
\alias{assert_dev_input_is_Date}
\alias{assert_dev_input_is_Date_atom}
\alias{assert_dev_input_is_Date_matrix}
\alias{assert_dev_input_is_Date_nonNA_atom}
\alias{assert_dev_input_is_Date_nonNA_matrix}
\alias{assert_dev_input_is_Date_nonNA_vector}
\alias{assert_dev_input_is_Date_vector}
\alias{assert_dev_input_is_double}
\alias{assert_dev_input_is_double_atom}
\alias{assert_dev_input_is_double_gtezero_atom}
\alias{assert_dev_input_is_double_gtezero_matrix}
\alias{assert_dev_input_is_double_gtezero_vector}
\alias{assert_dev_input_is_double_gtzero_atom}
\alias{assert_dev_input_is_double_gtzero_matrix}
\alias{assert_dev_input_is_double_gtzero_vector}
\alias{assert_dev_input_is_double_ltezero_atom}
\alias{assert_dev_input_is_double_ltezero_matrix}
\alias{assert_dev_input_is_double_ltezero_vector}
\alias{assert_dev_input_is_double_ltzero_atom}
\alias{assert_dev_input_is_double_ltzero_matrix}
\alias{assert_dev_input_is_double_ltzero_vector}
\alias{assert_dev_input_is_double_matrix}
\alias{assert_dev_input_is_double_nonNA_atom}
\alias{assert_dev_input_is_double_nonNA_gtezero_atom}
\alias{assert_dev_input_is_double_nonNA_gtezero_matrix}
\alias{assert_dev_input_is_double_nonNA_gtezero_vector}
\alias{assert_dev_input_is_double_nonNA_gtzero_atom}
\alias{assert_dev_input_is_double_nonNA_gtzero_matrix}
\alias{assert_dev_input_is_double_nonNA_gtzero_vector}
\alias{assert_dev_input_is_double_nonNA_ltezero_atom}
\alias{assert_dev_input_is_double_nonNA_ltezero_matrix}
\alias{assert_dev_input_is_double_nonNA_ltezero_vector}
\alias{assert_dev_input_is_double_nonNA_ltzero_atom}
\alias{assert_dev_input_is_double_nonNA_ltzero_matrix}
\alias{assert_dev_input_is_double_nonNA_ltzero_vector}
\alias{assert_dev_input_is_double_nonNA_matrix}
\alias{assert_dev_input_is_double_nonNA_vector}
\alias{assert_dev_input_is_double_vector}
\alias{assert_dev_input_is_environment}
\alias{assert_dev_input_is_expression}
\alias{assert_dev_input_is_factor}
\alias{assert_dev_input_is_factor_atom}
\alias{assert_dev_input_is_factor_matrix}
\alias{assert_dev_input_is_factor_nonNA_atom}
\alias{assert_dev_input_is_factor_nonNA_matrix}
\alias{assert_dev_input_is_factor_nonNA_vector}
\alias{assert_dev_input_is_factor_vector}
\alias{assert_dev_input_is_factor_with_levels}
\alias{assert_dev_input_is_function}
\alias{assert_dev_input_is_function_with_required_argument_names}
\alias{assert_dev_input_is_gt}
\alias{assert_dev_input_is_gte}
\alias{assert_dev_input_is_gtezero}
\alias{assert_dev_input_is_gtzero}
\alias{assert_dev_input_is_integer}
\alias{assert_dev_input_is_integer_atom}
\alias{assert_dev_input_is_integer_gtezero_atom}
\alias{assert_dev_input_is_integer_gtezero_matrix}
\alias{assert_dev_input_is_integer_gtezero_vector}
\alias{assert_dev_input_is_integer_gtzero_atom}
\alias{assert_dev_input_is_integer_gtzero_matrix}
\alias{assert_dev_input_is_integer_gtzero_vector}
\alias{assert_dev_input_is_integer_ltezero_atom}
\alias{assert_dev_input_is_integer_ltezero_matrix}
\alias{assert_dev_input_is_integer_ltezero_vector}
\alias{assert_dev_input_is_integer_ltzero_atom}
\alias{assert_dev_input_is_integer_ltzero_matrix}
\alias{assert_dev_input_is_integer_ltzero_vector}
\alias{assert_dev_input_is_integer_matrix}
\alias{assert_dev_input_is_integer_nonNA_atom}
\alias{assert_dev_input_is_integer_nonNA_gtezero_atom}
\alias{assert_dev_input_is_integer_nonNA_gtezero_matrix}
\alias{assert_dev_input_is_integer_nonNA_gtezero_vector}
\alias{assert_dev_input_is_integer_nonNA_gtzero_atom}
\alias{assert_dev_input_is_integer_nonNA_gtzero_matrix}
\alias{assert_dev_input_is_integer_nonNA_gtzero_vector}
\alias{assert_dev_input_is_integer_nonNA_ltezero_atom}
\alias{assert_dev_input_is_integer_nonNA_ltezero_matrix}
\alias{assert_dev_input_is_integer_nonNA_ltezero_vector}
\alias{assert_dev_input_is_integer_nonNA_ltzero_atom}
\alias{assert_dev_input_is_integer_nonNA_ltzero_matrix}
\alias{assert_dev_input_is_integer_nonNA_ltzero_vector}
\alias{assert_dev_input_is_integer_nonNA_matrix}
\alias{assert_dev_input_is_integer_nonNA_vector}
\alias{assert_dev_input_is_integer_vector}
\alias{assert_dev_input_is_language_object}
\alias{assert_dev_input_is_list}
\alias{assert_dev_input_is_logical}
\alias{assert_dev_input_is_logical_atom}
\alias{assert_dev_input_is_logical_matrix}
\alias{assert_dev_input_is_logical_nonNA_atom}
\alias{assert_dev_input_is_logical_nonNA_matrix}
\alias{assert_dev_input_is_logical_nonNA_vector}
\alias{assert_dev_input_is_logical_vector}
\alias{assert_dev_input_is_lt}
\alias{assert_dev_input_is_lte}
\alias{assert_dev_input_is_ltezero}
\alias{assert_dev_input_is_ltzero}
\alias{assert_dev_input_is_matrix}
\alias{assert_dev_input_is_name}
\alias{assert_dev_input_is_named}
\alias{assert_dev_input_is_named_list}
\alias{assert_dev_input_is_nonNA}
\alias{assert_dev_input_is_NULL}
\alias{assert_dev_input_is_number}
\alias{assert_dev_input_is_number_atom}
\alias{assert_dev_input_is_number_gtezero_atom}
\alias{assert_dev_input_is_number_gtezero_matrix}
\alias{assert_dev_input_is_number_gtezero_vector}
\alias{assert_dev_input_is_number_gtzero_atom}
\alias{assert_dev_input_is_number_gtzero_matrix}
\alias{assert_dev_input_is_number_gtzero_vector}
\alias{assert_dev_input_is_number_ltezero_atom}
\alias{assert_dev_input_is_number_ltezero_matrix}
\alias{assert_dev_input_is_number_ltezero_vector}
\alias{assert_dev_input_is_number_ltzero_atom}
\alias{assert_dev_input_is_number_ltzero_matrix}
\alias{assert_dev_input_is_number_ltzero_vector}
\alias{assert_dev_input_is_number_matrix}
\alias{assert_dev_input_is_number_nonNA_atom}
\alias{assert_dev_input_is_number_nonNA_gtezero_atom}
\alias{assert_dev_input_is_number_nonNA_gtezero_matrix}
\alias{assert_dev_input_is_number_nonNA_gtezero_vector}
\alias{assert_dev_input_is_number_nonNA_gtzero_atom}
\alias{assert_dev_input_is_number_nonNA_gtzero_matrix}
\alias{assert_dev_input_is_number_nonNA_gtzero_vector}
\alias{assert_dev_input_is_number_nonNA_ltezero_atom}
\alias{assert_dev_input_is_number_nonNA_ltezero_matrix}
\alias{assert_dev_input_is_number_nonNA_ltezero_vector}
\alias{assert_dev_input_is_number_nonNA_ltzero_atom}
\alias{assert_dev_input_is_number_nonNA_ltzero_matrix}
\alias{assert_dev_input_is_number_nonNA_ltzero_vector}
\alias{assert_dev_input_is_number_nonNA_matrix}
\alias{assert_dev_input_is_number_nonNA_vector}
\alias{assert_dev_input_is_number_vector}
\alias{assert_dev_input_is_numeric}
\alias{assert_dev_input_is_of_length}
\alias{assert_dev_input_is_report_df}
\alias{assert_dev_input_is_TRUE}
\alias{assert_dev_input_is_uniquely_named}
\alias{assert_dev_input_is_uniquely_named_list}
\alias{assert_dev_input_is_vector}
\alias{assert_dev_input_match_regex}
\alias{assert_dev_input_vector_elems_are_in_set}
\alias{assert_dev_interim_all_are_TRUE}
\alias{assert_dev_interim_atom_is_in_set}
\alias{assert_dev_interim_dir_exists}
\alias{assert_dev_interim_file_exists}
\alias{assert_dev_interim_has_class}
\alias{assert_dev_interim_has_length}
\alias{assert_dev_interim_has_names}
\alias{assert_dev_interim_has_no_duplicates}
\alias{assert_dev_interim_has_one_of_classes}
\alias{assert_dev_interim_has_only_names}
\alias{assert_dev_interim_has_only_valid_observations}
\alias{assert_dev_interim_inherits}
\alias{assert_dev_interim_is_assertion_type}
\alias{assert_dev_interim_is_atom}
\alias{assert_dev_interim_is_between_exclusive}
\alias{assert_dev_interim_is_between_inclusive}
\alias{assert_dev_interim_is_call}
\alias{assert_dev_interim_is_character}
\alias{assert_dev_interim_is_character_atom}
\alias{assert_dev_interim_is_character_matrix}
\alias{assert_dev_interim_is_character_nonNA_atom}
\alias{assert_dev_interim_is_character_nonNA_matrix}
\alias{assert_dev_interim_is_character_nonNA_vector}
\alias{assert_dev_interim_is_character_vector}
\alias{assert_dev_interim_is_data.frame}
\alias{assert_dev_interim_is_data.frame_with_required_names}
\alias{assert_dev_interim_is_data.table}
\alias{assert_dev_interim_is_data.table_with_required_names}
\alias{assert_dev_interim_is_data_table}
\alias{assert_dev_interim_is_data_table_with_required_names}
\alias{assert_dev_interim_is_Date}
\alias{assert_dev_interim_is_Date_atom}
\alias{assert_dev_interim_is_Date_matrix}
\alias{assert_dev_interim_is_Date_nonNA_atom}
\alias{assert_dev_interim_is_Date_nonNA_matrix}
\alias{assert_dev_interim_is_Date_nonNA_vector}
\alias{assert_dev_interim_is_Date_vector}
\alias{assert_dev_interim_is_double}
\alias{assert_dev_interim_is_double_atom}
\alias{assert_dev_interim_is_double_gtezero_atom}
\alias{assert_dev_interim_is_double_gtezero_matrix}
\alias{assert_dev_interim_is_double_gtezero_vector}
\alias{assert_dev_interim_is_double_gtzero_atom}
\alias{assert_dev_interim_is_double_gtzero_matrix}
\alias{assert_dev_interim_is_double_gtzero_vector}
\alias{assert_dev_interim_is_double_ltezero_atom}
\alias{assert_dev_interim_is_double_ltezero_matrix}
\alias{assert_dev_interim_is_double_ltezero_vector}
\alias{assert_dev_interim_is_double_ltzero_atom}
\alias{assert_dev_interim_is_double_ltzero_matrix}
\alias{assert_dev_interim_is_double_ltzero_vector}
\alias{assert_dev_interim_is_double_matrix}
\alias{assert_dev_interim_is_double_nonNA_atom}
\alias{assert_dev_interim_is_double_nonNA_gtezero_atom}
\alias{assert_dev_interim_is_double_nonNA_gtezero_matrix}
\alias{assert_dev_interim_is_double_nonNA_gtezero_vector}
\alias{assert_dev_interim_is_double_nonNA_gtzero_atom}
\alias{assert_dev_interim_is_double_nonNA_gtzero_matrix}
\alias{assert_dev_interim_is_double_nonNA_gtzero_vector}
\alias{assert_dev_interim_is_double_nonNA_ltezero_atom}
\alias{assert_dev_interim_is_double_nonNA_ltezero_matrix}
\alias{assert_dev_interim_is_double_nonNA_ltezero_vector}
\alias{assert_dev_interim_is_double_nonNA_ltzero_atom}
\alias{assert_dev_interim_is_double_nonNA_ltzero_matrix}
\alias{assert_dev_interim_is_double_nonNA_ltzero_vector}
\alias{assert_dev_interim_is_double_nonNA_matrix}
\alias{assert_dev_interim_is_double_nonNA_vector}
\alias{assert_dev_interim_is_double_vector}
\alias{assert_dev_interim_is_environment}
\alias{assert_dev_interim_is_expression}
\alias{assert_dev_interim_is_factor}
\alias{assert_dev_interim_is_factor_atom}
\alias{assert_dev_interim_is_factor_matrix}
\alias{assert_dev_interim_is_factor_nonNA_atom}
\alias{assert_dev_interim_is_factor_nonNA_matrix}
\alias{assert_dev_interim_is_factor_nonNA_vector}
\alias{assert_dev_interim_is_factor_vector}
\alias{assert_dev_interim_is_factor_with_levels}
\alias{assert_dev_interim_is_function}
\alias{assert_dev_interim_is_function_with_required_argument_names}
\alias{assert_dev_interim_is_gt}
\alias{assert_dev_interim_is_gte}
\alias{assert_dev_interim_is_gtezero}
\alias{assert_dev_interim_is_gtzero}
\alias{assert_dev_interim_is_integer}
\alias{assert_dev_interim_is_integer_atom}
\alias{assert_dev_interim_is_integer_gtezero_atom}
\alias{assert_dev_interim_is_integer_gtezero_matrix}
\alias{assert_dev_interim_is_integer_gtezero_vector}
\alias{assert_dev_interim_is_integer_gtzero_atom}
\alias{assert_dev_interim_is_integer_gtzero_matrix}
\alias{assert_dev_interim_is_integer_gtzero_vector}
\alias{assert_dev_interim_is_integer_ltezero_atom}
\alias{assert_dev_interim_is_integer_ltezero_matrix}
\alias{assert_dev_interim_is_integer_ltezero_vector}
\alias{assert_dev_interim_is_integer_ltzero_atom}
\alias{assert_dev_interim_is_integer_ltzero_matrix}
\alias{assert_dev_interim_is_integer_ltzero_vector}
\alias{assert_dev_interim_is_integer_matrix}
\alias{assert_dev_interim_is_integer_nonNA_atom}
\alias{assert_dev_interim_is_integer_nonNA_gtezero_atom}
\alias{assert_dev_interim_is_integer_nonNA_gtezero_matrix}
\alias{assert_dev_interim_is_integer_nonNA_gtezero_vector}
\alias{assert_dev_interim_is_integer_nonNA_gtzero_atom}
\alias{assert_dev_interim_is_integer_nonNA_gtzero_matrix}
\alias{assert_dev_interim_is_integer_nonNA_gtzero_vector}
\alias{assert_dev_interim_is_integer_nonNA_ltezero_atom}
\alias{assert_dev_interim_is_integer_nonNA_ltezero_matrix}
\alias{assert_dev_interim_is_integer_nonNA_ltezero_vector}
\alias{assert_dev_interim_is_integer_nonNA_ltzero_atom}
\alias{assert_dev_interim_is_integer_nonNA_ltzero_matrix}
\alias{assert_dev_interim_is_integer_nonNA_ltzero_vector}
\alias{assert_dev_interim_is_integer_nonNA_matrix}
\alias{assert_dev_interim_is_integer_nonNA_vector}
\alias{assert_dev_interim_is_integer_vector}
\alias{assert_dev_interim_is_language_object}
\alias{assert_dev_interim_is_list}
\alias{assert_dev_interim_is_logical}
\alias{assert_dev_interim_is_logical_atom}
\alias{assert_dev_interim_is_logical_matrix}
\alias{assert_dev_interim_is_logical_nonNA_atom}
\alias{assert_dev_interim_is_logical_nonNA_matrix}
\alias{assert_dev_interim_is_logical_nonNA_vector}
\alias{assert_dev_interim_is_logical_vector}
\alias{assert_dev_interim_is_lt}
\alias{assert_dev_interim_is_lte}
\alias{assert_dev_interim_is_ltezero}
\alias{assert_dev_interim_is_ltzero}
\alias{assert_dev_interim_is_matrix}
\alias{assert_dev_interim_is_name}
\alias{assert_dev_interim_is_named}
\alias{assert_dev_interim_is_named_list}
\alias{assert_dev_interim_is_nonNA}
\alias{assert_dev_interim_is_NULL}
\alias{assert_dev_interim_is_number}
\alias{assert_dev_interim_is_number_atom}
\alias{assert_dev_interim_is_number_gtezero_atom}
\alias{assert_dev_interim_is_number_gtezero_matrix}
\alias{assert_dev_interim_is_number_gtezero_vector}
\alias{assert_dev_interim_is_number_gtzero_atom}
\alias{assert_dev_interim_is_number_gtzero_matrix}
\alias{assert_dev_interim_is_number_gtzero_vector}
\alias{assert_dev_interim_is_number_ltezero_atom}
\alias{assert_dev_interim_is_number_ltezero_matrix}
\alias{assert_dev_interim_is_number_ltezero_vector}
\alias{assert_dev_interim_is_number_ltzero_atom}
\alias{assert_dev_interim_is_number_ltzero_matrix}
\alias{assert_dev_interim_is_number_ltzero_vector}
\alias{assert_dev_interim_is_number_matrix}
\alias{assert_dev_interim_is_number_nonNA_atom}
\alias{assert_dev_interim_is_number_nonNA_gtezero_atom}
\alias{assert_dev_interim_is_number_nonNA_gtezero_matrix}
\alias{assert_dev_interim_is_number_nonNA_gtezero_vector}
\alias{assert_dev_interim_is_number_nonNA_gtzero_atom}
\alias{assert_dev_interim_is_number_nonNA_gtzero_matrix}
\alias{assert_dev_interim_is_number_nonNA_gtzero_vector}
\alias{assert_dev_interim_is_number_nonNA_ltezero_atom}
\alias{assert_dev_interim_is_number_nonNA_ltezero_matrix}
\alias{assert_dev_interim_is_number_nonNA_ltezero_vector}
\alias{assert_dev_interim_is_number_nonNA_ltzero_atom}
\alias{assert_dev_interim_is_number_nonNA_ltzero_matrix}
\alias{assert_dev_interim_is_number_nonNA_ltzero_vector}
\alias{assert_dev_interim_is_number_nonNA_matrix}
\alias{assert_dev_interim_is_number_nonNA_vector}
\alias{assert_dev_interim_is_number_vector}
\alias{assert_dev_interim_is_numeric}
\alias{assert_dev_interim_is_of_length}
\alias{assert_dev_interim_is_report_df}
\alias{assert_dev_interim_is_TRUE}
\alias{assert_dev_interim_is_uniquely_named}
\alias{assert_dev_interim_is_uniquely_named_list}
\alias{assert_dev_interim_is_vector}
\alias{assert_dev_interim_match_regex}
\alias{assert_dev_interim_vector_elems_are_in_set}
\alias{assert_dev_output_all_are_TRUE}
\alias{assert_dev_output_atom_is_in_set}
\alias{assert_dev_output_dir_exists}
\alias{assert_dev_output_file_exists}
\alias{assert_dev_output_has_class}
\alias{assert_dev_output_has_length}
\alias{assert_dev_output_has_names}
\alias{assert_dev_output_has_no_duplicates}
\alias{assert_dev_output_has_one_of_classes}
\alias{assert_dev_output_has_only_names}
\alias{assert_dev_output_has_only_valid_observations}
\alias{assert_dev_output_inherits}
\alias{assert_dev_output_is_assertion_type}
\alias{assert_dev_output_is_atom}
\alias{assert_dev_output_is_between_exclusive}
\alias{assert_dev_output_is_between_inclusive}
\alias{assert_dev_output_is_call}
\alias{assert_dev_output_is_character}
\alias{assert_dev_output_is_character_atom}
\alias{assert_dev_output_is_character_matrix}
\alias{assert_dev_output_is_character_nonNA_atom}
\alias{assert_dev_output_is_character_nonNA_matrix}
\alias{assert_dev_output_is_character_nonNA_vector}
\alias{assert_dev_output_is_character_vector}
\alias{assert_dev_output_is_data.frame}
\alias{assert_dev_output_is_data.frame_with_required_names}
\alias{assert_dev_output_is_data.table}
\alias{assert_dev_output_is_data.table_with_required_names}
\alias{assert_dev_output_is_data_table}
\alias{assert_dev_output_is_data_table_with_required_names}
\alias{assert_dev_output_is_Date}
\alias{assert_dev_output_is_Date_atom}
\alias{assert_dev_output_is_Date_matrix}
\alias{assert_dev_output_is_Date_nonNA_atom}
\alias{assert_dev_output_is_Date_nonNA_matrix}
\alias{assert_dev_output_is_Date_nonNA_vector}
\alias{assert_dev_output_is_Date_vector}
\alias{assert_dev_output_is_double}
\alias{assert_dev_output_is_double_atom}
\alias{assert_dev_output_is_double_gtezero_atom}
\alias{assert_dev_output_is_double_gtezero_matrix}
\alias{assert_dev_output_is_double_gtezero_vector}
\alias{assert_dev_output_is_double_gtzero_atom}
\alias{assert_dev_output_is_double_gtzero_matrix}
\alias{assert_dev_output_is_double_gtzero_vector}
\alias{assert_dev_output_is_double_ltezero_atom}
\alias{assert_dev_output_is_double_ltezero_matrix}
\alias{assert_dev_output_is_double_ltezero_vector}
\alias{assert_dev_output_is_double_ltzero_atom}
\alias{assert_dev_output_is_double_ltzero_matrix}
\alias{assert_dev_output_is_double_ltzero_vector}
\alias{assert_dev_output_is_double_matrix}
\alias{assert_dev_output_is_double_nonNA_atom}
\alias{assert_dev_output_is_double_nonNA_gtezero_atom}
\alias{assert_dev_output_is_double_nonNA_gtezero_matrix}
\alias{assert_dev_output_is_double_nonNA_gtezero_vector}
\alias{assert_dev_output_is_double_nonNA_gtzero_atom}
\alias{assert_dev_output_is_double_nonNA_gtzero_matrix}
\alias{assert_dev_output_is_double_nonNA_gtzero_vector}
\alias{assert_dev_output_is_double_nonNA_ltezero_atom}
\alias{assert_dev_output_is_double_nonNA_ltezero_matrix}
\alias{assert_dev_output_is_double_nonNA_ltezero_vector}
\alias{assert_dev_output_is_double_nonNA_ltzero_atom}
\alias{assert_dev_output_is_double_nonNA_ltzero_matrix}
\alias{assert_dev_output_is_double_nonNA_ltzero_vector}
\alias{assert_dev_output_is_double_nonNA_matrix}
\alias{assert_dev_output_is_double_nonNA_vector}
\alias{assert_dev_output_is_double_vector}
\alias{assert_dev_output_is_environment}
\alias{assert_dev_output_is_expression}
\alias{assert_dev_output_is_factor}
\alias{assert_dev_output_is_factor_atom}
\alias{assert_dev_output_is_factor_matrix}
\alias{assert_dev_output_is_factor_nonNA_atom}
\alias{assert_dev_output_is_factor_nonNA_matrix}
\alias{assert_dev_output_is_factor_nonNA_vector}
\alias{assert_dev_output_is_factor_vector}
\alias{assert_dev_output_is_factor_with_levels}
\alias{assert_dev_output_is_function}
\alias{assert_dev_output_is_function_with_required_argument_names}
\alias{assert_dev_output_is_gt}
\alias{assert_dev_output_is_gte}
\alias{assert_dev_output_is_gtezero}
\alias{assert_dev_output_is_gtzero}
\alias{assert_dev_output_is_integer}
\alias{assert_dev_output_is_integer_atom}
\alias{assert_dev_output_is_integer_gtezero_atom}
\alias{assert_dev_output_is_integer_gtezero_matrix}
\alias{assert_dev_output_is_integer_gtezero_vector}
\alias{assert_dev_output_is_integer_gtzero_atom}
\alias{assert_dev_output_is_integer_gtzero_matrix}
\alias{assert_dev_output_is_integer_gtzero_vector}
\alias{assert_dev_output_is_integer_ltezero_atom}
\alias{assert_dev_output_is_integer_ltezero_matrix}
\alias{assert_dev_output_is_integer_ltezero_vector}
\alias{assert_dev_output_is_integer_ltzero_atom}
\alias{assert_dev_output_is_integer_ltzero_matrix}
\alias{assert_dev_output_is_integer_ltzero_vector}
\alias{assert_dev_output_is_integer_matrix}
\alias{assert_dev_output_is_integer_nonNA_atom}
\alias{assert_dev_output_is_integer_nonNA_gtezero_atom}
\alias{assert_dev_output_is_integer_nonNA_gtezero_matrix}
\alias{assert_dev_output_is_integer_nonNA_gtezero_vector}
\alias{assert_dev_output_is_integer_nonNA_gtzero_atom}
\alias{assert_dev_output_is_integer_nonNA_gtzero_matrix}
\alias{assert_dev_output_is_integer_nonNA_gtzero_vector}
\alias{assert_dev_output_is_integer_nonNA_ltezero_atom}
\alias{assert_dev_output_is_integer_nonNA_ltezero_matrix}
\alias{assert_dev_output_is_integer_nonNA_ltezero_vector}
\alias{assert_dev_output_is_integer_nonNA_ltzero_atom}
\alias{assert_dev_output_is_integer_nonNA_ltzero_matrix}
\alias{assert_dev_output_is_integer_nonNA_ltzero_vector}
\alias{assert_dev_output_is_integer_nonNA_matrix}
\alias{assert_dev_output_is_integer_nonNA_vector}
\alias{assert_dev_output_is_integer_vector}
\alias{assert_dev_output_is_language_object}
\alias{assert_dev_output_is_list}
\alias{assert_dev_output_is_logical}
\alias{assert_dev_output_is_logical_atom}
\alias{assert_dev_output_is_logical_matrix}
\alias{assert_dev_output_is_logical_nonNA_atom}
\alias{assert_dev_output_is_logical_nonNA_matrix}
\alias{assert_dev_output_is_logical_nonNA_vector}
\alias{assert_dev_output_is_logical_vector}
\alias{assert_dev_output_is_lt}
\alias{assert_dev_output_is_lte}
\alias{assert_dev_output_is_ltezero}
\alias{assert_dev_output_is_ltzero}
\alias{assert_dev_output_is_matrix}
\alias{assert_dev_output_is_name}
\alias{assert_dev_output_is_named}
\alias{assert_dev_output_is_named_list}
\alias{assert_dev_output_is_nonNA}
\alias{assert_dev_output_is_NULL}
\alias{assert_dev_output_is_number}
\alias{assert_dev_output_is_number_atom}
\alias{assert_dev_output_is_number_gtezero_atom}
\alias{assert_dev_output_is_number_gtezero_matrix}
\alias{assert_dev_output_is_number_gtezero_vector}
\alias{assert_dev_output_is_number_gtzero_atom}
\alias{assert_dev_output_is_number_gtzero_matrix}
\alias{assert_dev_output_is_number_gtzero_vector}
\alias{assert_dev_output_is_number_ltezero_atom}
\alias{assert_dev_output_is_number_ltezero_matrix}
\alias{assert_dev_output_is_number_ltezero_vector}
\alias{assert_dev_output_is_number_ltzero_atom}
\alias{assert_dev_output_is_number_ltzero_matrix}
\alias{assert_dev_output_is_number_ltzero_vector}
\alias{assert_dev_output_is_number_matrix}
\alias{assert_dev_output_is_number_nonNA_atom}
\alias{assert_dev_output_is_number_nonNA_gtezero_atom}
\alias{assert_dev_output_is_number_nonNA_gtezero_matrix}
\alias{assert_dev_output_is_number_nonNA_gtezero_vector}
\alias{assert_dev_output_is_number_nonNA_gtzero_atom}
\alias{assert_dev_output_is_number_nonNA_gtzero_matrix}
\alias{assert_dev_output_is_number_nonNA_gtzero_vector}
\alias{assert_dev_output_is_number_nonNA_ltezero_atom}
\alias{assert_dev_output_is_number_nonNA_ltezero_matrix}
\alias{assert_dev_output_is_number_nonNA_ltezero_vector}
\alias{assert_dev_output_is_number_nonNA_ltzero_atom}
\alias{assert_dev_output_is_number_nonNA_ltzero_matrix}
\alias{assert_dev_output_is_number_nonNA_ltzero_vector}
\alias{assert_dev_output_is_number_nonNA_matrix}
\alias{assert_dev_output_is_number_nonNA_vector}
\alias{assert_dev_output_is_number_vector}
\alias{assert_dev_output_is_numeric}
\alias{assert_dev_output_is_of_length}
\alias{assert_dev_output_is_report_df}
\alias{assert_dev_output_is_TRUE}
\alias{assert_dev_output_is_uniquely_named}
\alias{assert_dev_output_is_uniquely_named_list}
\alias{assert_dev_output_is_vector}
\alias{assert_dev_output_match_regex}
\alias{assert_dev_output_vector_elems_are_in_set}
\alias{assert_all_are_TRUE}
\alias{assert_atom_is_in_set}
\alias{assert_dir_exists}
\alias{assert_file_exists}
\alias{assert_has_class}
\alias{assert_has_length}
\alias{assert_has_names}
\alias{assert_has_no_duplicates}
\alias{assert_has_one_of_classes}
\alias{assert_has_only_names}
\alias{assert_has_only_valid_observations}
\alias{assert_inherits}
\alias{assert_is_assertion_type}
\alias{assert_is_atom}
\alias{assert_is_between_exclusive}
\alias{assert_is_between_inclusive}
\alias{assert_is_call}
\alias{assert_is_character}
\alias{assert_is_character_atom}
\alias{assert_is_character_matrix}
\alias{assert_is_character_nonNA_atom}
\alias{assert_is_character_nonNA_matrix}
\alias{assert_is_character_nonNA_vector}
\alias{assert_is_character_vector}
\alias{assert_is_data.frame}
\alias{assert_is_data.frame_with_required_names}
\alias{assert_is_data.table}
\alias{assert_is_data.table_with_required_names}
\alias{assert_is_data_table}
\alias{assert_is_data_table_with_required_names}
\alias{assert_is_Date}
\alias{assert_is_Date_atom}
\alias{assert_is_Date_matrix}
\alias{assert_is_Date_nonNA_atom}
\alias{assert_is_Date_nonNA_matrix}
\alias{assert_is_Date_nonNA_vector}
\alias{assert_is_Date_vector}
\alias{assert_is_double}
\alias{assert_is_double_atom}
\alias{assert_is_double_gtezero_atom}
\alias{assert_is_double_gtezero_matrix}
\alias{assert_is_double_gtezero_vector}
\alias{assert_is_double_gtzero_atom}
\alias{assert_is_double_gtzero_matrix}
\alias{assert_is_double_gtzero_vector}
\alias{assert_is_double_ltezero_atom}
\alias{assert_is_double_ltezero_matrix}
\alias{assert_is_double_ltezero_vector}
\alias{assert_is_double_ltzero_atom}
\alias{assert_is_double_ltzero_matrix}
\alias{assert_is_double_ltzero_vector}
\alias{assert_is_double_matrix}
\alias{assert_is_double_nonNA_atom}
\alias{assert_is_double_nonNA_gtezero_atom}
\alias{assert_is_double_nonNA_gtezero_matrix}
\alias{assert_is_double_nonNA_gtezero_vector}
\alias{assert_is_double_nonNA_gtzero_atom}
\alias{assert_is_double_nonNA_gtzero_matrix}
\alias{assert_is_double_nonNA_gtzero_vector}
\alias{assert_is_double_nonNA_ltezero_atom}
\alias{assert_is_double_nonNA_ltezero_matrix}
\alias{assert_is_double_nonNA_ltezero_vector}
\alias{assert_is_double_nonNA_ltzero_atom}
\alias{assert_is_double_nonNA_ltzero_matrix}
\alias{assert_is_double_nonNA_ltzero_vector}
\alias{assert_is_double_nonNA_matrix}
\alias{assert_is_double_nonNA_vector}
\alias{assert_is_double_vector}
\alias{assert_is_environment}
\alias{assert_is_expression}
\alias{assert_is_factor}
\alias{assert_is_factor_atom}
\alias{assert_is_factor_matrix}
\alias{assert_is_factor_nonNA_atom}
\alias{assert_is_factor_nonNA_matrix}
\alias{assert_is_factor_nonNA_vector}
\alias{assert_is_factor_vector}
\alias{assert_is_factor_with_levels}
\alias{assert_is_function}
\alias{assert_is_function_with_required_argument_names}
\alias{assert_is_gt}
\alias{assert_is_gte}
\alias{assert_is_gtezero}
\alias{assert_is_gtzero}
\alias{assert_is_integer}
\alias{assert_is_integer_atom}
\alias{assert_is_integer_gtezero_atom}
\alias{assert_is_integer_gtezero_matrix}
\alias{assert_is_integer_gtezero_vector}
\alias{assert_is_integer_gtzero_atom}
\alias{assert_is_integer_gtzero_matrix}
\alias{assert_is_integer_gtzero_vector}
\alias{assert_is_integer_ltezero_atom}
\alias{assert_is_integer_ltezero_matrix}
\alias{assert_is_integer_ltezero_vector}
\alias{assert_is_integer_ltzero_atom}
\alias{assert_is_integer_ltzero_matrix}
\alias{assert_is_integer_ltzero_vector}
\alias{assert_is_integer_matrix}
\alias{assert_is_integer_nonNA_atom}
\alias{assert_is_integer_nonNA_gtezero_atom}
\alias{assert_is_integer_nonNA_gtezero_matrix}
\alias{assert_is_integer_nonNA_gtezero_vector}
\alias{assert_is_integer_nonNA_gtzero_atom}
\alias{assert_is_integer_nonNA_gtzero_matrix}
\alias{assert_is_integer_nonNA_gtzero_vector}
\alias{assert_is_integer_nonNA_ltezero_atom}
\alias{assert_is_integer_nonNA_ltezero_matrix}
\alias{assert_is_integer_nonNA_ltezero_vector}
\alias{assert_is_integer_nonNA_ltzero_atom}
\alias{assert_is_integer_nonNA_ltzero_matrix}
\alias{assert_is_integer_nonNA_ltzero_vector}
\alias{assert_is_integer_nonNA_matrix}
\alias{assert_is_integer_nonNA_vector}
\alias{assert_is_integer_vector}
\alias{assert_is_language_object}
\alias{assert_is_list}
\alias{assert_is_logical}
\alias{assert_is_logical_atom}
\alias{assert_is_logical_matrix}
\alias{assert_is_logical_nonNA_atom}
\alias{assert_is_logical_nonNA_matrix}
\alias{assert_is_logical_nonNA_vector}
\alias{assert_is_logical_vector}
\alias{assert_is_lt}
\alias{assert_is_lte}
\alias{assert_is_ltezero}
\alias{assert_is_ltzero}
\alias{assert_is_matrix}
\alias{assert_is_name}
\alias{assert_is_named}
\alias{assert_is_named_list}
\alias{assert_is_nonNA}
\alias{assert_is_NULL}
\alias{assert_is_number}
\alias{assert_is_number_atom}
\alias{assert_is_number_gtezero_atom}
\alias{assert_is_number_gtezero_matrix}
\alias{assert_is_number_gtezero_vector}
\alias{assert_is_number_gtzero_atom}
\alias{assert_is_number_gtzero_matrix}
\alias{assert_is_number_gtzero_vector}
\alias{assert_is_number_ltezero_atom}
\alias{assert_is_number_ltezero_matrix}
\alias{assert_is_number_ltezero_vector}
\alias{assert_is_number_ltzero_atom}
\alias{assert_is_number_ltzero_matrix}
\alias{assert_is_number_ltzero_vector}
\alias{assert_is_number_matrix}
\alias{assert_is_number_nonNA_atom}
\alias{assert_is_number_nonNA_gtezero_atom}
\alias{assert_is_number_nonNA_gtezero_matrix}
\alias{assert_is_number_nonNA_gtezero_vector}
\alias{assert_is_number_nonNA_gtzero_atom}
\alias{assert_is_number_nonNA_gtzero_matrix}
\alias{assert_is_number_nonNA_gtzero_vector}
\alias{assert_is_number_nonNA_ltezero_atom}
\alias{assert_is_number_nonNA_ltezero_matrix}
\alias{assert_is_number_nonNA_ltezero_vector}
\alias{assert_is_number_nonNA_ltzero_atom}
\alias{assert_is_number_nonNA_ltzero_matrix}
\alias{assert_is_number_nonNA_ltzero_vector}
\alias{assert_is_number_nonNA_matrix}
\alias{assert_is_number_nonNA_vector}
\alias{assert_is_number_vector}
\alias{assert_is_numeric}
\alias{assert_is_of_length}
\alias{assert_is_report_df}
\alias{assert_is_TRUE}
\alias{assert_is_uniquely_named}
\alias{assert_is_uniquely_named_list}
\alias{assert_is_vector}
\alias{assert_match_regex}
\alias{assert_vector_elems_are_in_set}
\alias{assert_input_all_are_TRUE}
\alias{assert_input_atom_is_in_set}
\alias{assert_input_dir_exists}
\alias{assert_input_file_exists}
\alias{assert_input_has_class}
\alias{assert_input_has_length}
\alias{assert_input_has_names}
\alias{assert_input_has_no_duplicates}
\alias{assert_input_has_one_of_classes}
\alias{assert_input_has_only_names}
\alias{assert_input_has_only_valid_observations}
\alias{assert_input_inherits}
\alias{assert_input_is_assertion_type}
\alias{assert_input_is_atom}
\alias{assert_input_is_between_exclusive}
\alias{assert_input_is_between_inclusive}
\alias{assert_input_is_call}
\alias{assert_input_is_character}
\alias{assert_input_is_character_atom}
\alias{assert_input_is_character_matrix}
\alias{assert_input_is_character_nonNA_atom}
\alias{assert_input_is_character_nonNA_matrix}
\alias{assert_input_is_character_nonNA_vector}
\alias{assert_input_is_character_vector}
\alias{assert_input_is_data.frame}
\alias{assert_input_is_data.frame_with_required_names}
\alias{assert_input_is_data.table}
\alias{assert_input_is_data.table_with_required_names}
\alias{assert_input_is_data_table}
\alias{assert_input_is_data_table_with_required_names}
\alias{assert_input_is_Date}
\alias{assert_input_is_Date_atom}
\alias{assert_input_is_Date_matrix}
\alias{assert_input_is_Date_nonNA_atom}
\alias{assert_input_is_Date_nonNA_matrix}
\alias{assert_input_is_Date_nonNA_vector}
\alias{assert_input_is_Date_vector}
\alias{assert_input_is_double}
\alias{assert_input_is_double_atom}
\alias{assert_input_is_double_gtezero_atom}
\alias{assert_input_is_double_gtezero_matrix}
\alias{assert_input_is_double_gtezero_vector}
\alias{assert_input_is_double_gtzero_atom}
\alias{assert_input_is_double_gtzero_matrix}
\alias{assert_input_is_double_gtzero_vector}
\alias{assert_input_is_double_ltezero_atom}
\alias{assert_input_is_double_ltezero_matrix}
\alias{assert_input_is_double_ltezero_vector}
\alias{assert_input_is_double_ltzero_atom}
\alias{assert_input_is_double_ltzero_matrix}
\alias{assert_input_is_double_ltzero_vector}
\alias{assert_input_is_double_matrix}
\alias{assert_input_is_double_nonNA_atom}
\alias{assert_input_is_double_nonNA_gtezero_atom}
\alias{assert_input_is_double_nonNA_gtezero_matrix}
\alias{assert_input_is_double_nonNA_gtezero_vector}
\alias{assert_input_is_double_nonNA_gtzero_atom}
\alias{assert_input_is_double_nonNA_gtzero_matrix}
\alias{assert_input_is_double_nonNA_gtzero_vector}
\alias{assert_input_is_double_nonNA_ltezero_atom}
\alias{assert_input_is_double_nonNA_ltezero_matrix}
\alias{assert_input_is_double_nonNA_ltezero_vector}
\alias{assert_input_is_double_nonNA_ltzero_atom}
\alias{assert_input_is_double_nonNA_ltzero_matrix}
\alias{assert_input_is_double_nonNA_ltzero_vector}
\alias{assert_input_is_double_nonNA_matrix}
\alias{assert_input_is_double_nonNA_vector}
\alias{assert_input_is_double_vector}
\alias{assert_input_is_environment}
\alias{assert_input_is_expression}
\alias{assert_input_is_factor}
\alias{assert_input_is_factor_atom}
\alias{assert_input_is_factor_matrix}
\alias{assert_input_is_factor_nonNA_atom}
\alias{assert_input_is_factor_nonNA_matrix}
\alias{assert_input_is_factor_nonNA_vector}
\alias{assert_input_is_factor_vector}
\alias{assert_input_is_factor_with_levels}
\alias{assert_input_is_function}
\alias{assert_input_is_function_with_required_argument_names}
\alias{assert_input_is_gt}
\alias{assert_input_is_gte}
\alias{assert_input_is_gtezero}
\alias{assert_input_is_gtzero}
\alias{assert_input_is_integer}
\alias{assert_input_is_integer_atom}
\alias{assert_input_is_integer_gtezero_atom}
\alias{assert_input_is_integer_gtezero_matrix}
\alias{assert_input_is_integer_gtezero_vector}
\alias{assert_input_is_integer_gtzero_atom}
\alias{assert_input_is_integer_gtzero_matrix}
\alias{assert_input_is_integer_gtzero_vector}
\alias{assert_input_is_integer_ltezero_atom}
\alias{assert_input_is_integer_ltezero_matrix}
\alias{assert_input_is_integer_ltezero_vector}
\alias{assert_input_is_integer_ltzero_atom}
\alias{assert_input_is_integer_ltzero_matrix}
\alias{assert_input_is_integer_ltzero_vector}
\alias{assert_input_is_integer_matrix}
\alias{assert_input_is_integer_nonNA_atom}
\alias{assert_input_is_integer_nonNA_gtezero_atom}
\alias{assert_input_is_integer_nonNA_gtezero_matrix}
\alias{assert_input_is_integer_nonNA_gtezero_vector}
\alias{assert_input_is_integer_nonNA_gtzero_atom}
\alias{assert_input_is_integer_nonNA_gtzero_matrix}
\alias{assert_input_is_integer_nonNA_gtzero_vector}
\alias{assert_input_is_integer_nonNA_ltezero_atom}
\alias{assert_input_is_integer_nonNA_ltezero_matrix}
\alias{assert_input_is_integer_nonNA_ltezero_vector}
\alias{assert_input_is_integer_nonNA_ltzero_atom}
\alias{assert_input_is_integer_nonNA_ltzero_matrix}
\alias{assert_input_is_integer_nonNA_ltzero_vector}
\alias{assert_input_is_integer_nonNA_matrix}
\alias{assert_input_is_integer_nonNA_vector}
\alias{assert_input_is_integer_vector}
\alias{assert_input_is_language_object}
\alias{assert_input_is_list}
\alias{assert_input_is_logical}
\alias{assert_input_is_logical_atom}
\alias{assert_input_is_logical_matrix}
\alias{assert_input_is_logical_nonNA_atom}
\alias{assert_input_is_logical_nonNA_matrix}
\alias{assert_input_is_logical_nonNA_vector}
\alias{assert_input_is_logical_vector}
\alias{assert_input_is_lt}
\alias{assert_input_is_lte}
\alias{assert_input_is_ltezero}
\alias{assert_input_is_ltzero}
\alias{assert_input_is_matrix}
\alias{assert_input_is_name}
\alias{assert_input_is_named}
\alias{assert_input_is_named_list}
\alias{assert_input_is_nonNA}
\alias{assert_input_is_NULL}
\alias{assert_input_is_number}
\alias{assert_input_is_number_atom}
\alias{assert_input_is_number_gtezero_atom}
\alias{assert_input_is_number_gtezero_matrix}
\alias{assert_input_is_number_gtezero_vector}
\alias{assert_input_is_number_gtzero_atom}
\alias{assert_input_is_number_gtzero_matrix}
\alias{assert_input_is_number_gtzero_vector}
\alias{assert_input_is_number_ltezero_atom}
\alias{assert_input_is_number_ltezero_matrix}
\alias{assert_input_is_number_ltezero_vector}
\alias{assert_input_is_number_ltzero_atom}
\alias{assert_input_is_number_ltzero_matrix}
\alias{assert_input_is_number_ltzero_vector}
\alias{assert_input_is_number_matrix}
\alias{assert_input_is_number_nonNA_atom}
\alias{assert_input_is_number_nonNA_gtezero_atom}
\alias{assert_input_is_number_nonNA_gtezero_matrix}
\alias{assert_input_is_number_nonNA_gtezero_vector}
\alias{assert_input_is_number_nonNA_gtzero_atom}
\alias{assert_input_is_number_nonNA_gtzero_matrix}
\alias{assert_input_is_number_nonNA_gtzero_vector}
\alias{assert_input_is_number_nonNA_ltezero_atom}
\alias{assert_input_is_number_nonNA_ltezero_matrix}
\alias{assert_input_is_number_nonNA_ltezero_vector}
\alias{assert_input_is_number_nonNA_ltzero_atom}
\alias{assert_input_is_number_nonNA_ltzero_matrix}
\alias{assert_input_is_number_nonNA_ltzero_vector}
\alias{assert_input_is_number_nonNA_matrix}
\alias{assert_input_is_number_nonNA_vector}
\alias{assert_input_is_number_vector}
\alias{assert_input_is_numeric}
\alias{assert_input_is_of_length}
\alias{assert_input_is_report_df}
\alias{assert_input_is_TRUE}
\alias{assert_input_is_uniquely_named}
\alias{assert_input_is_uniquely_named_list}
\alias{assert_input_is_vector}
\alias{assert_input_match_regex}
\alias{assert_input_vector_elems_are_in_set}
\alias{assert_prod_input_all_are_TRUE}
\alias{assert_prod_input_atom_is_in_set}
\alias{assert_prod_input_dir_exists}
\alias{assert_prod_input_file_exists}
\alias{assert_prod_input_has_class}
\alias{assert_prod_input_has_length}
\alias{assert_prod_input_has_names}
\alias{assert_prod_input_has_no_duplicates}
\alias{assert_prod_input_has_one_of_classes}
\alias{assert_prod_input_has_only_names}
\alias{assert_prod_input_has_only_valid_observations}
\alias{assert_prod_input_inherits}
\alias{assert_prod_input_is_assertion_type}
\alias{assert_prod_input_is_atom}
\alias{assert_prod_input_is_between_exclusive}
\alias{assert_prod_input_is_between_inclusive}
\alias{assert_prod_input_is_call}
\alias{assert_prod_input_is_character}
\alias{assert_prod_input_is_character_atom}
\alias{assert_prod_input_is_character_matrix}
\alias{assert_prod_input_is_character_nonNA_atom}
\alias{assert_prod_input_is_character_nonNA_matrix}
\alias{assert_prod_input_is_character_nonNA_vector}
\alias{assert_prod_input_is_character_vector}
\alias{assert_prod_input_is_data.frame}
\alias{assert_prod_input_is_data.frame_with_required_names}
\alias{assert_prod_input_is_data.table}
\alias{assert_prod_input_is_data.table_with_required_names}
\alias{assert_prod_input_is_data_table}
\alias{assert_prod_input_is_data_table_with_required_names}
\alias{assert_prod_input_is_Date}
\alias{assert_prod_input_is_Date_atom}
\alias{assert_prod_input_is_Date_matrix}
\alias{assert_prod_input_is_Date_nonNA_atom}
\alias{assert_prod_input_is_Date_nonNA_matrix}
\alias{assert_prod_input_is_Date_nonNA_vector}
\alias{assert_prod_input_is_Date_vector}
\alias{assert_prod_input_is_double}
\alias{assert_prod_input_is_double_atom}
\alias{assert_prod_input_is_double_gtezero_atom}
\alias{assert_prod_input_is_double_gtezero_matrix}
\alias{assert_prod_input_is_double_gtezero_vector}
\alias{assert_prod_input_is_double_gtzero_atom}
\alias{assert_prod_input_is_double_gtzero_matrix}
\alias{assert_prod_input_is_double_gtzero_vector}
\alias{assert_prod_input_is_double_ltezero_atom}
\alias{assert_prod_input_is_double_ltezero_matrix}
\alias{assert_prod_input_is_double_ltezero_vector}
\alias{assert_prod_input_is_double_ltzero_atom}
\alias{assert_prod_input_is_double_ltzero_matrix}
\alias{assert_prod_input_is_double_ltzero_vector}
\alias{assert_prod_input_is_double_matrix}
\alias{assert_prod_input_is_double_nonNA_atom}
\alias{assert_prod_input_is_double_nonNA_gtezero_atom}
\alias{assert_prod_input_is_double_nonNA_gtezero_matrix}
\alias{assert_prod_input_is_double_nonNA_gtezero_vector}
\alias{assert_prod_input_is_double_nonNA_gtzero_atom}
\alias{assert_prod_input_is_double_nonNA_gtzero_matrix}
\alias{assert_prod_input_is_double_nonNA_gtzero_vector}
\alias{assert_prod_input_is_double_nonNA_ltezero_atom}
\alias{assert_prod_input_is_double_nonNA_ltezero_matrix}
\alias{assert_prod_input_is_double_nonNA_ltezero_vector}
\alias{assert_prod_input_is_double_nonNA_ltzero_atom}
\alias{assert_prod_input_is_double_nonNA_ltzero_matrix}
\alias{assert_prod_input_is_double_nonNA_ltzero_vector}
\alias{assert_prod_input_is_double_nonNA_matrix}
\alias{assert_prod_input_is_double_nonNA_vector}
\alias{assert_prod_input_is_double_vector}
\alias{assert_prod_input_is_environment}
\alias{assert_prod_input_is_expression}
\alias{assert_prod_input_is_factor}
\alias{assert_prod_input_is_factor_atom}
\alias{assert_prod_input_is_factor_matrix}
\alias{assert_prod_input_is_factor_nonNA_atom}
\alias{assert_prod_input_is_factor_nonNA_matrix}
\alias{assert_prod_input_is_factor_nonNA_vector}
\alias{assert_prod_input_is_factor_vector}
\alias{assert_prod_input_is_factor_with_levels}
\alias{assert_prod_input_is_function}
\alias{assert_prod_input_is_function_with_required_argument_names}
\alias{assert_prod_input_is_gt}
\alias{assert_prod_input_is_gte}
\alias{assert_prod_input_is_gtezero}
\alias{assert_prod_input_is_gtzero}
\alias{assert_prod_input_is_integer}
\alias{assert_prod_input_is_integer_atom}
\alias{assert_prod_input_is_integer_gtezero_atom}
\alias{assert_prod_input_is_integer_gtezero_matrix}
\alias{assert_prod_input_is_integer_gtezero_vector}
\alias{assert_prod_input_is_integer_gtzero_atom}
\alias{assert_prod_input_is_integer_gtzero_matrix}
\alias{assert_prod_input_is_integer_gtzero_vector}
\alias{assert_prod_input_is_integer_ltezero_atom}
\alias{assert_prod_input_is_integer_ltezero_matrix}
\alias{assert_prod_input_is_integer_ltezero_vector}
\alias{assert_prod_input_is_integer_ltzero_atom}
\alias{assert_prod_input_is_integer_ltzero_matrix}
\alias{assert_prod_input_is_integer_ltzero_vector}
\alias{assert_prod_input_is_integer_matrix}
\alias{assert_prod_input_is_integer_nonNA_atom}
\alias{assert_prod_input_is_integer_nonNA_gtezero_atom}
\alias{assert_prod_input_is_integer_nonNA_gtezero_matrix}
\alias{assert_prod_input_is_integer_nonNA_gtezero_vector}
\alias{assert_prod_input_is_integer_nonNA_gtzero_atom}
\alias{assert_prod_input_is_integer_nonNA_gtzero_matrix}
\alias{assert_prod_input_is_integer_nonNA_gtzero_vector}
\alias{assert_prod_input_is_integer_nonNA_ltezero_atom}
\alias{assert_prod_input_is_integer_nonNA_ltezero_matrix}
\alias{assert_prod_input_is_integer_nonNA_ltezero_vector}
\alias{assert_prod_input_is_integer_nonNA_ltzero_atom}
\alias{assert_prod_input_is_integer_nonNA_ltzero_matrix}
\alias{assert_prod_input_is_integer_nonNA_ltzero_vector}
\alias{assert_prod_input_is_integer_nonNA_matrix}
\alias{assert_prod_input_is_integer_nonNA_vector}
\alias{assert_prod_input_is_integer_vector}
\alias{assert_prod_input_is_language_object}
\alias{assert_prod_input_is_list}
\alias{assert_prod_input_is_logical}
\alias{assert_prod_input_is_logical_atom}
\alias{assert_prod_input_is_logical_matrix}
\alias{assert_prod_input_is_logical_nonNA_atom}
\alias{assert_prod_input_is_logical_nonNA_matrix}
\alias{assert_prod_input_is_logical_nonNA_vector}
\alias{assert_prod_input_is_logical_vector}
\alias{assert_prod_input_is_lt}
\alias{assert_prod_input_is_lte}
\alias{assert_prod_input_is_ltezero}
\alias{assert_prod_input_is_ltzero}
\alias{assert_prod_input_is_matrix}
\alias{assert_prod_input_is_name}
\alias{assert_prod_input_is_named}
\alias{assert_prod_input_is_named_list}
\alias{assert_prod_input_is_nonNA}
\alias{assert_prod_input_is_NULL}
\alias{assert_prod_input_is_number}
\alias{assert_prod_input_is_number_atom}
\alias{assert_prod_input_is_number_gtezero_atom}
\alias{assert_prod_input_is_number_gtezero_matrix}
\alias{assert_prod_input_is_number_gtezero_vector}
\alias{assert_prod_input_is_number_gtzero_atom}
\alias{assert_prod_input_is_number_gtzero_matrix}
\alias{assert_prod_input_is_number_gtzero_vector}
\alias{assert_prod_input_is_number_ltezero_atom}
\alias{assert_prod_input_is_number_ltezero_matrix}
\alias{assert_prod_input_is_number_ltezero_vector}
\alias{assert_prod_input_is_number_ltzero_atom}
\alias{assert_prod_input_is_number_ltzero_matrix}
\alias{assert_prod_input_is_number_ltzero_vector}
\alias{assert_prod_input_is_number_matrix}
\alias{assert_prod_input_is_number_nonNA_atom}
\alias{assert_prod_input_is_number_nonNA_gtezero_atom}
\alias{assert_prod_input_is_number_nonNA_gtezero_matrix}
\alias{assert_prod_input_is_number_nonNA_gtezero_vector}
\alias{assert_prod_input_is_number_nonNA_gtzero_atom}
\alias{assert_prod_input_is_number_nonNA_gtzero_matrix}
\alias{assert_prod_input_is_number_nonNA_gtzero_vector}
\alias{assert_prod_input_is_number_nonNA_ltezero_atom}
\alias{assert_prod_input_is_number_nonNA_ltezero_matrix}
\alias{assert_prod_input_is_number_nonNA_ltezero_vector}
\alias{assert_prod_input_is_number_nonNA_ltzero_atom}
\alias{assert_prod_input_is_number_nonNA_ltzero_matrix}
\alias{assert_prod_input_is_number_nonNA_ltzero_vector}
\alias{assert_prod_input_is_number_nonNA_matrix}
\alias{assert_prod_input_is_number_nonNA_vector}
\alias{assert_prod_input_is_number_vector}
\alias{assert_prod_input_is_numeric}
\alias{assert_prod_input_is_of_length}
\alias{assert_prod_input_is_report_df}
\alias{assert_prod_input_is_TRUE}
\alias{assert_prod_input_is_uniquely_named}
\alias{assert_prod_input_is_uniquely_named_list}
\alias{assert_prod_input_is_vector}
\alias{assert_prod_input_match_regex}
\alias{assert_prod_input_vector_elems_are_in_set}
\alias{assert_prod_interim_all_are_TRUE}
\alias{assert_prod_interim_atom_is_in_set}
\alias{assert_prod_interim_dir_exists}
\alias{assert_prod_interim_file_exists}
\alias{assert_prod_interim_has_class}
\alias{assert_prod_interim_has_length}
\alias{assert_prod_interim_has_names}
\alias{assert_prod_interim_has_no_duplicates}
\alias{assert_prod_interim_has_one_of_classes}
\alias{assert_prod_interim_has_only_names}
\alias{assert_prod_interim_has_only_valid_observations}
\alias{assert_prod_interim_inherits}
\alias{assert_prod_interim_is_assertion_type}
\alias{assert_prod_interim_is_atom}
\alias{assert_prod_interim_is_between_exclusive}
\alias{assert_prod_interim_is_between_inclusive}
\alias{assert_prod_interim_is_call}
\alias{assert_prod_interim_is_character}
\alias{assert_prod_interim_is_character_atom}
\alias{assert_prod_interim_is_character_matrix}
\alias{assert_prod_interim_is_character_nonNA_atom}
\alias{assert_prod_interim_is_character_nonNA_matrix}
\alias{assert_prod_interim_is_character_nonNA_vector}
\alias{assert_prod_interim_is_character_vector}
\alias{assert_prod_interim_is_data.frame}
\alias{assert_prod_interim_is_data.frame_with_required_names}
\alias{assert_prod_interim_is_data.table}
\alias{assert_prod_interim_is_data.table_with_required_names}
\alias{assert_prod_interim_is_data_table}
\alias{assert_prod_interim_is_data_table_with_required_names}
\alias{assert_prod_interim_is_Date}
\alias{assert_prod_interim_is_Date_atom}
\alias{assert_prod_interim_is_Date_matrix}
\alias{assert_prod_interim_is_Date_nonNA_atom}
\alias{assert_prod_interim_is_Date_nonNA_matrix}
\alias{assert_prod_interim_is_Date_nonNA_vector}
\alias{assert_prod_interim_is_Date_vector}
\alias{assert_prod_interim_is_double}
\alias{assert_prod_interim_is_double_atom}
\alias{assert_prod_interim_is_double_gtezero_atom}
\alias{assert_prod_interim_is_double_gtezero_matrix}
\alias{assert_prod_interim_is_double_gtezero_vector}
\alias{assert_prod_interim_is_double_gtzero_atom}
\alias{assert_prod_interim_is_double_gtzero_matrix}
\alias{assert_prod_interim_is_double_gtzero_vector}
\alias{assert_prod_interim_is_double_ltezero_atom}
\alias{assert_prod_interim_is_double_ltezero_matrix}
\alias{assert_prod_interim_is_double_ltezero_vector}
\alias{assert_prod_interim_is_double_ltzero_atom}
\alias{assert_prod_interim_is_double_ltzero_matrix}
\alias{assert_prod_interim_is_double_ltzero_vector}
\alias{assert_prod_interim_is_double_matrix}
\alias{assert_prod_interim_is_double_nonNA_atom}
\alias{assert_prod_interim_is_double_nonNA_gtezero_atom}
\alias{assert_prod_interim_is_double_nonNA_gtezero_matrix}
\alias{assert_prod_interim_is_double_nonNA_gtezero_vector}
\alias{assert_prod_interim_is_double_nonNA_gtzero_atom}
\alias{assert_prod_interim_is_double_nonNA_gtzero_matrix}
\alias{assert_prod_interim_is_double_nonNA_gtzero_vector}
\alias{assert_prod_interim_is_double_nonNA_ltezero_atom}
\alias{assert_prod_interim_is_double_nonNA_ltezero_matrix}
\alias{assert_prod_interim_is_double_nonNA_ltezero_vector}
\alias{assert_prod_interim_is_double_nonNA_ltzero_atom}
\alias{assert_prod_interim_is_double_nonNA_ltzero_matrix}
\alias{assert_prod_interim_is_double_nonNA_ltzero_vector}
\alias{assert_prod_interim_is_double_nonNA_matrix}
\alias{assert_prod_interim_is_double_nonNA_vector}
\alias{assert_prod_interim_is_double_vector}
\alias{assert_prod_interim_is_environment}
\alias{assert_prod_interim_is_expression}
\alias{assert_prod_interim_is_factor}
\alias{assert_prod_interim_is_factor_atom}
\alias{assert_prod_interim_is_factor_matrix}
\alias{assert_prod_interim_is_factor_nonNA_atom}
\alias{assert_prod_interim_is_factor_nonNA_matrix}
\alias{assert_prod_interim_is_factor_nonNA_vector}
\alias{assert_prod_interim_is_factor_vector}
\alias{assert_prod_interim_is_factor_with_levels}
\alias{assert_prod_interim_is_function}
\alias{assert_prod_interim_is_function_with_required_argument_names}
\alias{assert_prod_interim_is_gt}
\alias{assert_prod_interim_is_gte}
\alias{assert_prod_interim_is_gtezero}
\alias{assert_prod_interim_is_gtzero}
\alias{assert_prod_interim_is_integer}
\alias{assert_prod_interim_is_integer_atom}
\alias{assert_prod_interim_is_integer_gtezero_atom}
\alias{assert_prod_interim_is_integer_gtezero_matrix}
\alias{assert_prod_interim_is_integer_gtezero_vector}
\alias{assert_prod_interim_is_integer_gtzero_atom}
\alias{assert_prod_interim_is_integer_gtzero_matrix}
\alias{assert_prod_interim_is_integer_gtzero_vector}
\alias{assert_prod_interim_is_integer_ltezero_atom}
\alias{assert_prod_interim_is_integer_ltezero_matrix}
\alias{assert_prod_interim_is_integer_ltezero_vector}
\alias{assert_prod_interim_is_integer_ltzero_atom}
\alias{assert_prod_interim_is_integer_ltzero_matrix}
\alias{assert_prod_interim_is_integer_ltzero_vector}
\alias{assert_prod_interim_is_integer_matrix}
\alias{assert_prod_interim_is_integer_nonNA_atom}
\alias{assert_prod_interim_is_integer_nonNA_gtezero_atom}
\alias{assert_prod_interim_is_integer_nonNA_gtezero_matrix}
\alias{assert_prod_interim_is_integer_nonNA_gtezero_vector}
\alias{assert_prod_interim_is_integer_nonNA_gtzero_atom}
\alias{assert_prod_interim_is_integer_nonNA_gtzero_matrix}
\alias{assert_prod_interim_is_integer_nonNA_gtzero_vector}
\alias{assert_prod_interim_is_integer_nonNA_ltezero_atom}
\alias{assert_prod_interim_is_integer_nonNA_ltezero_matrix}
\alias{assert_prod_interim_is_integer_nonNA_ltezero_vector}
\alias{assert_prod_interim_is_integer_nonNA_ltzero_atom}
\alias{assert_prod_interim_is_integer_nonNA_ltzero_matrix}
\alias{assert_prod_interim_is_integer_nonNA_ltzero_vector}
\alias{assert_prod_interim_is_integer_nonNA_matrix}
\alias{assert_prod_interim_is_integer_nonNA_vector}
\alias{assert_prod_interim_is_integer_vector}
\alias{assert_prod_interim_is_language_object}
\alias{assert_prod_interim_is_list}
\alias{assert_prod_interim_is_logical}
\alias{assert_prod_interim_is_logical_atom}
\alias{assert_prod_interim_is_logical_matrix}
\alias{assert_prod_interim_is_logical_nonNA_atom}
\alias{assert_prod_interim_is_logical_nonNA_matrix}
\alias{assert_prod_interim_is_logical_nonNA_vector}
\alias{assert_prod_interim_is_logical_vector}
\alias{assert_prod_interim_is_lt}
\alias{assert_prod_interim_is_lte}
\alias{assert_prod_interim_is_ltezero}
\alias{assert_prod_interim_is_ltzero}
\alias{assert_prod_interim_is_matrix}
\alias{assert_prod_interim_is_name}
\alias{assert_prod_interim_is_named}
\alias{assert_prod_interim_is_named_list}
\alias{assert_prod_interim_is_nonNA}
\alias{assert_prod_interim_is_NULL}
\alias{assert_prod_interim_is_number}
\alias{assert_prod_interim_is_number_atom}
\alias{assert_prod_interim_is_number_gtezero_atom}
\alias{assert_prod_interim_is_number_gtezero_matrix}
\alias{assert_prod_interim_is_number_gtezero_vector}
\alias{assert_prod_interim_is_number_gtzero_atom}
\alias{assert_prod_interim_is_number_gtzero_matrix}
\alias{assert_prod_interim_is_number_gtzero_vector}
\alias{assert_prod_interim_is_number_ltezero_atom}
\alias{assert_prod_interim_is_number_ltezero_matrix}
\alias{assert_prod_interim_is_number_ltezero_vector}
\alias{assert_prod_interim_is_number_ltzero_atom}
\alias{assert_prod_interim_is_number_ltzero_matrix}
\alias{assert_prod_interim_is_number_ltzero_vector}
\alias{assert_prod_interim_is_number_matrix}
\alias{assert_prod_interim_is_number_nonNA_atom}
\alias{assert_prod_interim_is_number_nonNA_gtezero_atom}
\alias{assert_prod_interim_is_number_nonNA_gtezero_matrix}
\alias{assert_prod_interim_is_number_nonNA_gtezero_vector}
\alias{assert_prod_interim_is_number_nonNA_gtzero_atom}
\alias{assert_prod_interim_is_number_nonNA_gtzero_matrix}
\alias{assert_prod_interim_is_number_nonNA_gtzero_vector}
\alias{assert_prod_interim_is_number_nonNA_ltezero_atom}
\alias{assert_prod_interim_is_number_nonNA_ltezero_matrix}
\alias{assert_prod_interim_is_number_nonNA_ltezero_vector}
\alias{assert_prod_interim_is_number_nonNA_ltzero_atom}
\alias{assert_prod_interim_is_number_nonNA_ltzero_matrix}
\alias{assert_prod_interim_is_number_nonNA_ltzero_vector}
\alias{assert_prod_interim_is_number_nonNA_matrix}
\alias{assert_prod_interim_is_number_nonNA_vector}
\alias{assert_prod_interim_is_number_vector}
\alias{assert_prod_interim_is_numeric}
\alias{assert_prod_interim_is_of_length}
\alias{assert_prod_interim_is_report_df}
\alias{assert_prod_interim_is_TRUE}
\alias{assert_prod_interim_is_uniquely_named}
\alias{assert_prod_interim_is_uniquely_named_list}
\alias{assert_prod_interim_is_vector}
\alias{assert_prod_interim_match_regex}
\alias{assert_prod_interim_vector_elems_are_in_set}
\alias{assert_prod_output_all_are_TRUE}
\alias{assert_prod_output_atom_is_in_set}
\alias{assert_prod_output_dir_exists}
\alias{assert_prod_output_file_exists}
\alias{assert_prod_output_has_class}
\alias{assert_prod_output_has_length}
\alias{assert_prod_output_has_names}
\alias{assert_prod_output_has_no_duplicates}
\alias{assert_prod_output_has_one_of_classes}
\alias{assert_prod_output_has_only_names}
\alias{assert_prod_output_has_only_valid_observations}
\alias{assert_prod_output_inherits}
\alias{assert_prod_output_is_assertion_type}
\alias{assert_prod_output_is_atom}
\alias{assert_prod_output_is_between_exclusive}
\alias{assert_prod_output_is_between_inclusive}
\alias{assert_prod_output_is_call}
\alias{assert_prod_output_is_character}
\alias{assert_prod_output_is_character_atom}
\alias{assert_prod_output_is_character_matrix}
\alias{assert_prod_output_is_character_nonNA_atom}
\alias{assert_prod_output_is_character_nonNA_matrix}
\alias{assert_prod_output_is_character_nonNA_vector}
\alias{assert_prod_output_is_character_vector}
\alias{assert_prod_output_is_data.frame}
\alias{assert_prod_output_is_data.frame_with_required_names}
\alias{assert_prod_output_is_data.table}
\alias{assert_prod_output_is_data.table_with_required_names}
\alias{assert_prod_output_is_data_table}
\alias{assert_prod_output_is_data_table_with_required_names}
\alias{assert_prod_output_is_Date}
\alias{assert_prod_output_is_Date_atom}
\alias{assert_prod_output_is_Date_matrix}
\alias{assert_prod_output_is_Date_nonNA_atom}
\alias{assert_prod_output_is_Date_nonNA_matrix}
\alias{assert_prod_output_is_Date_nonNA_vector}
\alias{assert_prod_output_is_Date_vector}
\alias{assert_prod_output_is_double}
\alias{assert_prod_output_is_double_atom}
\alias{assert_prod_output_is_double_gtezero_atom}
\alias{assert_prod_output_is_double_gtezero_matrix}
\alias{assert_prod_output_is_double_gtezero_vector}
\alias{assert_prod_output_is_double_gtzero_atom}
\alias{assert_prod_output_is_double_gtzero_matrix}
\alias{assert_prod_output_is_double_gtzero_vector}
\alias{assert_prod_output_is_double_ltezero_atom}
\alias{assert_prod_output_is_double_ltezero_matrix}
\alias{assert_prod_output_is_double_ltezero_vector}
\alias{assert_prod_output_is_double_ltzero_atom}
\alias{assert_prod_output_is_double_ltzero_matrix}
\alias{assert_prod_output_is_double_ltzero_vector}
\alias{assert_prod_output_is_double_matrix}
\alias{assert_prod_output_is_double_nonNA_atom}
\alias{assert_prod_output_is_double_nonNA_gtezero_atom}
\alias{assert_prod_output_is_double_nonNA_gtezero_matrix}
\alias{assert_prod_output_is_double_nonNA_gtezero_vector}
\alias{assert_prod_output_is_double_nonNA_gtzero_atom}
\alias{assert_prod_output_is_double_nonNA_gtzero_matrix}
\alias{assert_prod_output_is_double_nonNA_gtzero_vector}
\alias{assert_prod_output_is_double_nonNA_ltezero_atom}
\alias{assert_prod_output_is_double_nonNA_ltezero_matrix}
\alias{assert_prod_output_is_double_nonNA_ltezero_vector}
\alias{assert_prod_output_is_double_nonNA_ltzero_atom}
\alias{assert_prod_output_is_double_nonNA_ltzero_matrix}
\alias{assert_prod_output_is_double_nonNA_ltzero_vector}
\alias{assert_prod_output_is_double_nonNA_matrix}
\alias{assert_prod_output_is_double_nonNA_vector}
\alias{assert_prod_output_is_double_vector}
\alias{assert_prod_output_is_environment}
\alias{assert_prod_output_is_expression}
\alias{assert_prod_output_is_factor}
\alias{assert_prod_output_is_factor_atom}
\alias{assert_prod_output_is_factor_matrix}
\alias{assert_prod_output_is_factor_nonNA_atom}
\alias{assert_prod_output_is_factor_nonNA_matrix}
\alias{assert_prod_output_is_factor_nonNA_vector}
\alias{assert_prod_output_is_factor_vector}
\alias{assert_prod_output_is_factor_with_levels}
\alias{assert_prod_output_is_function}
\alias{assert_prod_output_is_function_with_required_argument_names}
\alias{assert_prod_output_is_gt}
\alias{assert_prod_output_is_gte}
\alias{assert_prod_output_is_gtezero}
\alias{assert_prod_output_is_gtzero}
\alias{assert_prod_output_is_integer}
\alias{assert_prod_output_is_integer_atom}
\alias{assert_prod_output_is_integer_gtezero_atom}
\alias{assert_prod_output_is_integer_gtezero_matrix}
\alias{assert_prod_output_is_integer_gtezero_vector}
\alias{assert_prod_output_is_integer_gtzero_atom}
\alias{assert_prod_output_is_integer_gtzero_matrix}
\alias{assert_prod_output_is_integer_gtzero_vector}
\alias{assert_prod_output_is_integer_ltezero_atom}
\alias{assert_prod_output_is_integer_ltezero_matrix}
\alias{assert_prod_output_is_integer_ltezero_vector}
\alias{assert_prod_output_is_integer_ltzero_atom}
\alias{assert_prod_output_is_integer_ltzero_matrix}
\alias{assert_prod_output_is_integer_ltzero_vector}
\alias{assert_prod_output_is_integer_matrix}
\alias{assert_prod_output_is_integer_nonNA_atom}
\alias{assert_prod_output_is_integer_nonNA_gtezero_atom}
\alias{assert_prod_output_is_integer_nonNA_gtezero_matrix}
\alias{assert_prod_output_is_integer_nonNA_gtezero_vector}
\alias{assert_prod_output_is_integer_nonNA_gtzero_atom}
\alias{assert_prod_output_is_integer_nonNA_gtzero_matrix}
\alias{assert_prod_output_is_integer_nonNA_gtzero_vector}
\alias{assert_prod_output_is_integer_nonNA_ltezero_atom}
\alias{assert_prod_output_is_integer_nonNA_ltezero_matrix}
\alias{assert_prod_output_is_integer_nonNA_ltezero_vector}
\alias{assert_prod_output_is_integer_nonNA_ltzero_atom}
\alias{assert_prod_output_is_integer_nonNA_ltzero_matrix}
\alias{assert_prod_output_is_integer_nonNA_ltzero_vector}
\alias{assert_prod_output_is_integer_nonNA_matrix}
\alias{assert_prod_output_is_integer_nonNA_vector}
\alias{assert_prod_output_is_integer_vector}
\alias{assert_prod_output_is_language_object}
\alias{assert_prod_output_is_list}
\alias{assert_prod_output_is_logical}
\alias{assert_prod_output_is_logical_atom}
\alias{assert_prod_output_is_logical_matrix}
\alias{assert_prod_output_is_logical_nonNA_atom}
\alias{assert_prod_output_is_logical_nonNA_matrix}
\alias{assert_prod_output_is_logical_nonNA_vector}
\alias{assert_prod_output_is_logical_vector}
\alias{assert_prod_output_is_lt}
\alias{assert_prod_output_is_lte}
\alias{assert_prod_output_is_ltezero}
\alias{assert_prod_output_is_ltzero}
\alias{assert_prod_output_is_matrix}
\alias{assert_prod_output_is_name}
\alias{assert_prod_output_is_named}
\alias{assert_prod_output_is_named_list}
\alias{assert_prod_output_is_nonNA}
\alias{assert_prod_output_is_NULL}
\alias{assert_prod_output_is_number}
\alias{assert_prod_output_is_number_atom}
\alias{assert_prod_output_is_number_gtezero_atom}
\alias{assert_prod_output_is_number_gtezero_matrix}
\alias{assert_prod_output_is_number_gtezero_vector}
\alias{assert_prod_output_is_number_gtzero_atom}
\alias{assert_prod_output_is_number_gtzero_matrix}
\alias{assert_prod_output_is_number_gtzero_vector}
\alias{assert_prod_output_is_number_ltezero_atom}
\alias{assert_prod_output_is_number_ltezero_matrix}
\alias{assert_prod_output_is_number_ltezero_vector}
\alias{assert_prod_output_is_number_ltzero_atom}
\alias{assert_prod_output_is_number_ltzero_matrix}
\alias{assert_prod_output_is_number_ltzero_vector}
\alias{assert_prod_output_is_number_matrix}
\alias{assert_prod_output_is_number_nonNA_atom}
\alias{assert_prod_output_is_number_nonNA_gtezero_atom}
\alias{assert_prod_output_is_number_nonNA_gtezero_matrix}
\alias{assert_prod_output_is_number_nonNA_gtezero_vector}
\alias{assert_prod_output_is_number_nonNA_gtzero_atom}
\alias{assert_prod_output_is_number_nonNA_gtzero_matrix}
\alias{assert_prod_output_is_number_nonNA_gtzero_vector}
\alias{assert_prod_output_is_number_nonNA_ltezero_atom}
\alias{assert_prod_output_is_number_nonNA_ltezero_matrix}
\alias{assert_prod_output_is_number_nonNA_ltezero_vector}
\alias{assert_prod_output_is_number_nonNA_ltzero_atom}
\alias{assert_prod_output_is_number_nonNA_ltzero_matrix}
\alias{assert_prod_output_is_number_nonNA_ltzero_vector}
\alias{assert_prod_output_is_number_nonNA_matrix}
\alias{assert_prod_output_is_number_nonNA_vector}
\alias{assert_prod_output_is_number_vector}
\alias{assert_prod_output_is_numeric}
\alias{assert_prod_output_is_of_length}
\alias{assert_prod_output_is_report_df}
\alias{assert_prod_output_is_TRUE}
\alias{assert_prod_output_is_uniquely_named}
\alias{assert_prod_output_is_uniquely_named_list}
\alias{assert_prod_output_is_vector}
\alias{assert_prod_output_match_regex}
\alias{assert_prod_output_vector_elems_are_in_set}
\alias{report_is_Date_atom}
\alias{report_is_Date_matrix}
\alias{report_is_Date_vector}
\alias{report_is_Date_nonNA_atom}
\alias{report_is_Date_nonNA_matrix}
\alias{report_is_Date_nonNA_vector}
\alias{report_is_character_atom}
\alias{report_is_character_matrix}
\alias{report_is_character_vector}
\alias{report_is_character_nonNA_atom}
\alias{report_is_character_nonNA_matrix}
\alias{report_is_character_nonNA_vector}
\alias{report_is_double_atom}
\alias{report_is_double_matrix}
\alias{report_is_double_vector}
\alias{report_is_double_gtezero_atom}
\alias{report_is_double_gtezero_matrix}
\alias{report_is_double_gtezero_vector}
\alias{report_is_double_gtzero_atom}
\alias{report_is_double_gtzero_matrix}
\alias{report_is_double_gtzero_vector}
\alias{report_is_double_ltezero_atom}
\alias{report_is_double_ltezero_matrix}
\alias{report_is_double_ltezero_vector}
\alias{report_is_double_ltzero_atom}
\alias{report_is_double_ltzero_matrix}
\alias{report_is_double_ltzero_vector}
\alias{report_is_double_nonNA_atom}
\alias{report_is_double_nonNA_matrix}
\alias{report_is_double_nonNA_vector}
\alias{report_is_double_nonNA_gtezero_atom}
\alias{report_is_double_nonNA_gtezero_matrix}
\alias{report_is_double_nonNA_gtezero_vector}
\alias{report_is_double_nonNA_gtzero_atom}
\alias{report_is_double_nonNA_gtzero_matrix}
\alias{report_is_double_nonNA_gtzero_vector}
\alias{report_is_double_nonNA_ltezero_atom}
\alias{report_is_double_nonNA_ltezero_matrix}
\alias{report_is_double_nonNA_ltezero_vector}
\alias{report_is_double_nonNA_ltzero_atom}
\alias{report_is_double_nonNA_ltzero_matrix}
\alias{report_is_double_nonNA_ltzero_vector}
\alias{report_is_factor_atom}
\alias{report_is_factor_matrix}
\alias{report_is_factor_vector}
\alias{report_is_factor_nonNA_atom}
\alias{report_is_factor_nonNA_matrix}
\alias{report_is_factor_nonNA_vector}
\alias{report_is_integer_atom}
\alias{report_is_integer_matrix}
\alias{report_is_integer_vector}
\alias{report_is_integer_gtezero_atom}
\alias{report_is_integer_gtezero_matrix}
\alias{report_is_integer_gtezero_vector}
\alias{report_is_integer_gtzero_atom}
\alias{report_is_integer_gtzero_matrix}
\alias{report_is_integer_gtzero_vector}
\alias{report_is_integer_ltezero_atom}
\alias{report_is_integer_ltezero_matrix}
\alias{report_is_integer_ltezero_vector}
\alias{report_is_integer_ltzero_atom}
\alias{report_is_integer_ltzero_matrix}
\alias{report_is_integer_ltzero_vector}
\alias{report_is_integer_nonNA_atom}
\alias{report_is_integer_nonNA_matrix}
\alias{report_is_integer_nonNA_vector}
\alias{report_is_integer_nonNA_gtezero_atom}
\alias{report_is_integer_nonNA_gtezero_matrix}
\alias{report_is_integer_nonNA_gtezero_vector}
\alias{report_is_integer_nonNA_gtzero_atom}
\alias{report_is_integer_nonNA_gtzero_matrix}
\alias{report_is_integer_nonNA_gtzero_vector}
\alias{report_is_integer_nonNA_ltezero_atom}
\alias{report_is_integer_nonNA_ltezero_matrix}
\alias{report_is_integer_nonNA_ltezero_vector}
\alias{report_is_integer_nonNA_ltzero_atom}
\alias{report_is_integer_nonNA_ltzero_matrix}
\alias{report_is_integer_nonNA_ltzero_vector}
\alias{report_is_logical_atom}
\alias{report_is_logical_matrix}
\alias{report_is_logical_vector}
\alias{report_is_logical_nonNA_atom}
\alias{report_is_logical_nonNA_matrix}
\alias{report_is_logical_nonNA_vector}
\alias{report_is_number_atom}
\alias{report_is_number_matrix}
\alias{report_is_number_vector}
\alias{report_is_number_gtezero_atom}
\alias{report_is_number_gtezero_matrix}
\alias{report_is_number_gtezero_vector}
\alias{report_is_number_gtzero_atom}
\alias{report_is_number_gtzero_matrix}
\alias{report_is_number_gtzero_vector}
\alias{report_is_number_ltezero_atom}
\alias{report_is_number_ltezero_matrix}
\alias{report_is_number_ltezero_vector}
\alias{report_is_number_ltzero_atom}
\alias{report_is_number_ltzero_matrix}
\alias{report_is_number_ltzero_vector}
\alias{report_is_number_nonNA_atom}
\alias{report_is_number_nonNA_matrix}
\alias{report_is_number_nonNA_vector}
\alias{report_is_number_nonNA_gtezero_atom}
\alias{report_is_number_nonNA_gtezero_matrix}
\alias{report_is_number_nonNA_gtezero_vector}
\alias{report_is_number_nonNA_gtzero_atom}
\alias{report_is_number_nonNA_gtzero_matrix}
\alias{report_is_number_nonNA_gtzero_vector}
\alias{report_is_number_nonNA_ltezero_atom}
\alias{report_is_number_nonNA_ltezero_matrix}
\alias{report_is_number_nonNA_ltezero_vector}
\alias{report_is_number_nonNA_ltzero_atom}
\alias{report_is_number_nonNA_ltzero_matrix}
\alias{report_is_number_nonNA_ltzero_vector}
\alias{test_all_are_TRUE}
\alias{test_atom_is_in_set}
\alias{test_dir_exists}
\alias{test_file_exists}
\alias{test_has_class}
\alias{test_has_length}
\alias{test_has_names}
\alias{test_has_no_duplicates}
\alias{test_has_one_of_classes}
\alias{test_has_only_names}
\alias{test_has_only_valid_observations}
\alias{test_inherits}
\alias{test_is_assertion_type}
\alias{test_is_atom}
\alias{test_is_between_exclusive}
\alias{test_is_between_inclusive}
\alias{test_is_call}
\alias{test_is_character}
\alias{test_is_character_atom}
\alias{test_is_character_matrix}
\alias{test_is_character_nonNA_atom}
\alias{test_is_character_nonNA_matrix}
\alias{test_is_character_nonNA_vector}
\alias{test_is_character_vector}
\alias{test_is_data.frame}
\alias{test_is_data.frame_with_required_names}
\alias{test_is_data.table}
\alias{test_is_data.table_with_required_names}
\alias{test_is_data_table}
\alias{test_is_data_table_with_required_names}
\alias{test_is_Date}
\alias{test_is_Date_atom}
\alias{test_is_Date_matrix}
\alias{test_is_Date_nonNA_atom}
\alias{test_is_Date_nonNA_matrix}
\alias{test_is_Date_nonNA_vector}
\alias{test_is_Date_vector}
\alias{test_is_double}
\alias{test_is_double_atom}
\alias{test_is_double_gtezero_atom}
\alias{test_is_double_gtezero_matrix}
\alias{test_is_double_gtezero_vector}
\alias{test_is_double_gtzero_atom}
\alias{test_is_double_gtzero_matrix}
\alias{test_is_double_gtzero_vector}
\alias{test_is_double_ltezero_atom}
\alias{test_is_double_ltezero_matrix}
\alias{test_is_double_ltezero_vector}
\alias{test_is_double_ltzero_atom}
\alias{test_is_double_ltzero_matrix}
\alias{test_is_double_ltzero_vector}
\alias{test_is_double_matrix}
\alias{test_is_double_nonNA_atom}
\alias{test_is_double_nonNA_gtezero_atom}
\alias{test_is_double_nonNA_gtezero_matrix}
\alias{test_is_double_nonNA_gtezero_vector}
\alias{test_is_double_nonNA_gtzero_atom}
\alias{test_is_double_nonNA_gtzero_matrix}
\alias{test_is_double_nonNA_gtzero_vector}
\alias{test_is_double_nonNA_ltezero_atom}
\alias{test_is_double_nonNA_ltezero_matrix}
\alias{test_is_double_nonNA_ltezero_vector}
\alias{test_is_double_nonNA_ltzero_atom}
\alias{test_is_double_nonNA_ltzero_matrix}
\alias{test_is_double_nonNA_ltzero_vector}
\alias{test_is_double_nonNA_matrix}
\alias{test_is_double_nonNA_vector}
\alias{test_is_double_vector}
\alias{test_is_environment}
\alias{test_is_expression}
\alias{test_is_factor}
\alias{test_is_factor_atom}
\alias{test_is_factor_matrix}
\alias{test_is_factor_nonNA_atom}
\alias{test_is_factor_nonNA_matrix}
\alias{test_is_factor_nonNA_vector}
\alias{test_is_factor_vector}
\alias{test_is_factor_with_levels}
\alias{test_is_function}
\alias{test_is_function_with_required_argument_names}
\alias{test_is_gt}
\alias{test_is_gte}
\alias{test_is_gtezero}
\alias{test_is_gtzero}
\alias{test_is_integer}
\alias{test_is_integer_atom}
\alias{test_is_integer_gtezero_atom}
\alias{test_is_integer_gtezero_matrix}
\alias{test_is_integer_gtezero_vector}
\alias{test_is_integer_gtzero_atom}
\alias{test_is_integer_gtzero_matrix}
\alias{test_is_integer_gtzero_vector}
\alias{test_is_integer_ltezero_atom}
\alias{test_is_integer_ltezero_matrix}
\alias{test_is_integer_ltezero_vector}
\alias{test_is_integer_ltzero_atom}
\alias{test_is_integer_ltzero_matrix}
\alias{test_is_integer_ltzero_vector}
\alias{test_is_integer_matrix}
\alias{test_is_integer_nonNA_atom}
\alias{test_is_integer_nonNA_gtezero_atom}
\alias{test_is_integer_nonNA_gtezero_matrix}
\alias{test_is_integer_nonNA_gtezero_vector}
\alias{test_is_integer_nonNA_gtzero_atom}
\alias{test_is_integer_nonNA_gtzero_matrix}
\alias{test_is_integer_nonNA_gtzero_vector}
\alias{test_is_integer_nonNA_ltezero_atom}
\alias{test_is_integer_nonNA_ltezero_matrix}
\alias{test_is_integer_nonNA_ltezero_vector}
\alias{test_is_integer_nonNA_ltzero_atom}
\alias{test_is_integer_nonNA_ltzero_matrix}
\alias{test_is_integer_nonNA_ltzero_vector}
\alias{test_is_integer_nonNA_matrix}
\alias{test_is_integer_nonNA_vector}
\alias{test_is_integer_vector}
\alias{test_is_language_object}
\alias{test_is_list}
\alias{test_is_logical}
\alias{test_is_logical_atom}
\alias{test_is_logical_matrix}
\alias{test_is_logical_nonNA_atom}
\alias{test_is_logical_nonNA_matrix}
\alias{test_is_logical_nonNA_vector}
\alias{test_is_logical_vector}
\alias{test_is_lt}
\alias{test_is_lte}
\alias{test_is_ltezero}
\alias{test_is_ltzero}
\alias{test_is_matrix}
\alias{test_is_name}
\alias{test_is_named}
\alias{test_is_named_list}
\alias{test_is_nonNA}
\alias{test_is_NULL}
\alias{test_is_number}
\alias{test_is_number_atom}
\alias{test_is_number_gtezero_atom}
\alias{test_is_number_gtezero_matrix}
\alias{test_is_number_gtezero_vector}
\alias{test_is_number_gtzero_atom}
\alias{test_is_number_gtzero_matrix}
\alias{test_is_number_gtzero_vector}
\alias{test_is_number_ltezero_atom}
\alias{test_is_number_ltezero_matrix}
\alias{test_is_number_ltezero_vector}
\alias{test_is_number_ltzero_atom}
\alias{test_is_number_ltzero_matrix}
\alias{test_is_number_ltzero_vector}
\alias{test_is_number_matrix}
\alias{test_is_number_nonNA_atom}
\alias{test_is_number_nonNA_gtezero_atom}
\alias{test_is_number_nonNA_gtezero_matrix}
\alias{test_is_number_nonNA_gtezero_vector}
\alias{test_is_number_nonNA_gtzero_atom}
\alias{test_is_number_nonNA_gtzero_matrix}
\alias{test_is_number_nonNA_gtzero_vector}
\alias{test_is_number_nonNA_ltezero_atom}
\alias{test_is_number_nonNA_ltezero_matrix}
\alias{test_is_number_nonNA_ltezero_vector}
\alias{test_is_number_nonNA_ltzero_atom}
\alias{test_is_number_nonNA_ltzero_matrix}
\alias{test_is_number_nonNA_ltzero_vector}
\alias{test_is_number_nonNA_matrix}
\alias{test_is_number_nonNA_vector}
\alias{test_is_number_vector}
\alias{test_is_numeric}
\alias{test_is_of_length}
\alias{test_is_report_df}
\alias{test_is_TRUE}
\alias{test_is_uniquely_named}
\alias{test_is_uniquely_named_list}
\alias{test_is_vector}
\alias{test_match_regex}
\alias{test_vector_elems_are_in_set}
\alias{assert_user_input_all_are_TRUE}
\alias{assert_user_input_atom_is_in_set}
\alias{assert_user_input_dir_exists}
\alias{assert_user_input_file_exists}
\alias{assert_user_input_has_class}
\alias{assert_user_input_has_length}
\alias{assert_user_input_has_names}
\alias{assert_user_input_has_no_duplicates}
\alias{assert_user_input_has_one_of_classes}
\alias{assert_user_input_has_only_names}
\alias{assert_user_input_has_only_valid_observations}
\alias{assert_user_input_inherits}
\alias{assert_user_input_is_assertion_type}
\alias{assert_user_input_is_atom}
\alias{assert_user_input_is_between_exclusive}
\alias{assert_user_input_is_between_inclusive}
\alias{assert_user_input_is_call}
\alias{assert_user_input_is_character}
\alias{assert_user_input_is_character_atom}
\alias{assert_user_input_is_character_matrix}
\alias{assert_user_input_is_character_nonNA_atom}
\alias{assert_user_input_is_character_nonNA_matrix}
\alias{assert_user_input_is_character_nonNA_vector}
\alias{assert_user_input_is_character_vector}
\alias{assert_user_input_is_data.frame}
\alias{assert_user_input_is_data.frame_with_required_names}
\alias{assert_user_input_is_data.table}
\alias{assert_user_input_is_data.table_with_required_names}
\alias{assert_user_input_is_data_table}
\alias{assert_user_input_is_data_table_with_required_names}
\alias{assert_user_input_is_Date}
\alias{assert_user_input_is_Date_atom}
\alias{assert_user_input_is_Date_matrix}
\alias{assert_user_input_is_Date_nonNA_atom}
\alias{assert_user_input_is_Date_nonNA_matrix}
\alias{assert_user_input_is_Date_nonNA_vector}
\alias{assert_user_input_is_Date_vector}
\alias{assert_user_input_is_double}
\alias{assert_user_input_is_double_atom}
\alias{assert_user_input_is_double_gtezero_atom}
\alias{assert_user_input_is_double_gtezero_matrix}
\alias{assert_user_input_is_double_gtezero_vector}
\alias{assert_user_input_is_double_gtzero_atom}
\alias{assert_user_input_is_double_gtzero_matrix}
\alias{assert_user_input_is_double_gtzero_vector}
\alias{assert_user_input_is_double_ltezero_atom}
\alias{assert_user_input_is_double_ltezero_matrix}
\alias{assert_user_input_is_double_ltezero_vector}
\alias{assert_user_input_is_double_ltzero_atom}
\alias{assert_user_input_is_double_ltzero_matrix}
\alias{assert_user_input_is_double_ltzero_vector}
\alias{assert_user_input_is_double_matrix}
\alias{assert_user_input_is_double_nonNA_atom}
\alias{assert_user_input_is_double_nonNA_gtezero_atom}
\alias{assert_user_input_is_double_nonNA_gtezero_matrix}
\alias{assert_user_input_is_double_nonNA_gtezero_vector}
\alias{assert_user_input_is_double_nonNA_gtzero_atom}
\alias{assert_user_input_is_double_nonNA_gtzero_matrix}
\alias{assert_user_input_is_double_nonNA_gtzero_vector}
\alias{assert_user_input_is_double_nonNA_ltezero_atom}
\alias{assert_user_input_is_double_nonNA_ltezero_matrix}
\alias{assert_user_input_is_double_nonNA_ltezero_vector}
\alias{assert_user_input_is_double_nonNA_ltzero_atom}
\alias{assert_user_input_is_double_nonNA_ltzero_matrix}
\alias{assert_user_input_is_double_nonNA_ltzero_vector}
\alias{assert_user_input_is_double_nonNA_matrix}
\alias{assert_user_input_is_double_nonNA_vector}
\alias{assert_user_input_is_double_vector}
\alias{assert_user_input_is_environment}
\alias{assert_user_input_is_expression}
\alias{assert_user_input_is_factor}
\alias{assert_user_input_is_factor_atom}
\alias{assert_user_input_is_factor_matrix}
\alias{assert_user_input_is_factor_nonNA_atom}
\alias{assert_user_input_is_factor_nonNA_matrix}
\alias{assert_user_input_is_factor_nonNA_vector}
\alias{assert_user_input_is_factor_vector}
\alias{assert_user_input_is_factor_with_levels}
\alias{assert_user_input_is_function}
\alias{assert_user_input_is_function_with_required_argument_names}
\alias{assert_user_input_is_gt}
\alias{assert_user_input_is_gte}
\alias{assert_user_input_is_gtezero}
\alias{assert_user_input_is_gtzero}
\alias{assert_user_input_is_integer}
\alias{assert_user_input_is_integer_atom}
\alias{assert_user_input_is_integer_gtezero_atom}
\alias{assert_user_input_is_integer_gtezero_matrix}
\alias{assert_user_input_is_integer_gtezero_vector}
\alias{assert_user_input_is_integer_gtzero_atom}
\alias{assert_user_input_is_integer_gtzero_matrix}
\alias{assert_user_input_is_integer_gtzero_vector}
\alias{assert_user_input_is_integer_ltezero_atom}
\alias{assert_user_input_is_integer_ltezero_matrix}
\alias{assert_user_input_is_integer_ltezero_vector}
\alias{assert_user_input_is_integer_ltzero_atom}
\alias{assert_user_input_is_integer_ltzero_matrix}
\alias{assert_user_input_is_integer_ltzero_vector}
\alias{assert_user_input_is_integer_matrix}
\alias{assert_user_input_is_integer_nonNA_atom}
\alias{assert_user_input_is_integer_nonNA_gtezero_atom}
\alias{assert_user_input_is_integer_nonNA_gtezero_matrix}
\alias{assert_user_input_is_integer_nonNA_gtezero_vector}
\alias{assert_user_input_is_integer_nonNA_gtzero_atom}
\alias{assert_user_input_is_integer_nonNA_gtzero_matrix}
\alias{assert_user_input_is_integer_nonNA_gtzero_vector}
\alias{assert_user_input_is_integer_nonNA_ltezero_atom}
\alias{assert_user_input_is_integer_nonNA_ltezero_matrix}
\alias{assert_user_input_is_integer_nonNA_ltezero_vector}
\alias{assert_user_input_is_integer_nonNA_ltzero_atom}
\alias{assert_user_input_is_integer_nonNA_ltzero_matrix}
\alias{assert_user_input_is_integer_nonNA_ltzero_vector}
\alias{assert_user_input_is_integer_nonNA_matrix}
\alias{assert_user_input_is_integer_nonNA_vector}
\alias{assert_user_input_is_integer_vector}
\alias{assert_user_input_is_language_object}
\alias{assert_user_input_is_list}
\alias{assert_user_input_is_logical}
\alias{assert_user_input_is_logical_atom}
\alias{assert_user_input_is_logical_matrix}
\alias{assert_user_input_is_logical_nonNA_atom}
\alias{assert_user_input_is_logical_nonNA_matrix}
\alias{assert_user_input_is_logical_nonNA_vector}
\alias{assert_user_input_is_logical_vector}
\alias{assert_user_input_is_lt}
\alias{assert_user_input_is_lte}
\alias{assert_user_input_is_ltezero}
\alias{assert_user_input_is_ltzero}
\alias{assert_user_input_is_matrix}
\alias{assert_user_input_is_name}
\alias{assert_user_input_is_named}
\alias{assert_user_input_is_named_list}
\alias{assert_user_input_is_nonNA}
\alias{assert_user_input_is_NULL}
\alias{assert_user_input_is_number}
\alias{assert_user_input_is_number_atom}
\alias{assert_user_input_is_number_gtezero_atom}
\alias{assert_user_input_is_number_gtezero_matrix}
\alias{assert_user_input_is_number_gtezero_vector}
\alias{assert_user_input_is_number_gtzero_atom}
\alias{assert_user_input_is_number_gtzero_matrix}
\alias{assert_user_input_is_number_gtzero_vector}
\alias{assert_user_input_is_number_ltezero_atom}
\alias{assert_user_input_is_number_ltezero_matrix}
\alias{assert_user_input_is_number_ltezero_vector}
\alias{assert_user_input_is_number_ltzero_atom}
\alias{assert_user_input_is_number_ltzero_matrix}
\alias{assert_user_input_is_number_ltzero_vector}
\alias{assert_user_input_is_number_matrix}
\alias{assert_user_input_is_number_nonNA_atom}
\alias{assert_user_input_is_number_nonNA_gtezero_atom}
\alias{assert_user_input_is_number_nonNA_gtezero_matrix}
\alias{assert_user_input_is_number_nonNA_gtezero_vector}
\alias{assert_user_input_is_number_nonNA_gtzero_atom}
\alias{assert_user_input_is_number_nonNA_gtzero_matrix}
\alias{assert_user_input_is_number_nonNA_gtzero_vector}
\alias{assert_user_input_is_number_nonNA_ltezero_atom}
\alias{assert_user_input_is_number_nonNA_ltezero_matrix}
\alias{assert_user_input_is_number_nonNA_ltezero_vector}
\alias{assert_user_input_is_number_nonNA_ltzero_atom}
\alias{assert_user_input_is_number_nonNA_ltzero_matrix}
\alias{assert_user_input_is_number_nonNA_ltzero_vector}
\alias{assert_user_input_is_number_nonNA_matrix}
\alias{assert_user_input_is_number_nonNA_vector}
\alias{assert_user_input_is_number_vector}
\alias{assert_user_input_is_numeric}
\alias{assert_user_input_is_of_length}
\alias{assert_user_input_is_report_df}
\alias{assert_user_input_is_TRUE}
\alias{assert_user_input_is_uniquely_named}
\alias{assert_user_input_is_uniquely_named_list}
\alias{assert_user_input_is_vector}
\alias{assert_user_input_match_regex}
\alias{assert_user_input_vector_elems_are_in_set}
\alias{identify_invalid_observations}
\alias{report_is_one_of}
\alias{assert_is_one_of}
\alias{assert_prod_input_is_one_of}
\alias{assert_prod_output_is_one_of}
\alias{assert_prod_interim_is_one_of}
\alias{assert_user_input_is_one_of}
\alias{assert_dev_input_is_one_of}
\alias{assert_dev_interim_is_one_of}
\alias{assert_dev_output_is_one_of}
\alias{report_has_only_valid_observations}
\title{Assertions}
\usage{
report_is(x, x_nm = NULL, call = NULL)

assert_is(x, x_nm = NULL, call = NULL)

assert_input_is(x, x_nm = NULL, call = NULL)

assert_user_input_is(x, x_nm = NULL, call = NULL)

assert_prod_input_is(x, x_nm = NULL, call = NULL)

assert_dev_input_is(x, x_nm = NULL, call = NULL)

assert_prod_output_is(x, x_nm = NULL, call = NULL)

assert_dev_output_is(x, x_nm = NULL, call = NULL)

assert_prod_interim_is(x, x_nm = NULL, call = NULL)

assert_dev_interim_is(x, x_nm = NULL, call = NULL)

report_all_are_TRUE(x, x_nm = NULL, call = NULL)

report_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

report_dir_exists(x, x_nm = NULL, call = NULL)

report_file_exists(x, x_nm = NULL, call = NULL)

report_has_class(x, x_nm = NULL, call = NULL, required_class)

report_has_length(x, x_nm = NULL, call = NULL, expected_length)

report_has_names(x, x_nm = NULL, call = NULL, required_names)

report_has_no_duplicates(x, x_nm = NULL, call = NULL)

report_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

report_has_only_names(x, x_nm = NULL, call = NULL, required_names)

report_inherits(x, x_nm = NULL, call = NULL, required_class)

report_is_assertion_type(x, x_nm = NULL, call = NULL)

report_is_atom(x, x_nm = NULL, call = NULL)

report_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

report_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

report_is_call(x, x_nm = NULL, call = NULL)

report_is_character(x, x_nm = NULL, call = NULL)

report_is_data.frame(x, x_nm = NULL, call = NULL)

report_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

report_is_data.table(x, x_nm = NULL, call = NULL)

report_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

report_is_data_table(x, x_nm = NULL, call = NULL)

report_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

report_is_Date(x, x_nm = NULL, call = NULL)

report_is_double(x, x_nm = NULL, call = NULL)

report_is_environment(x, x_nm = NULL, call = NULL)

report_is_expression(x, x_nm = NULL, call = NULL)

report_is_factor(x, x_nm = NULL, call = NULL)

report_is_factor_with_levels(x, x_nm = NULL, call = NULL, expected_levels)

report_is_function(x, x_nm = NULL, call = NULL)

report_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

report_is_gt(x, x_nm = NULL, call = NULL, lo)

report_is_gte(x, x_nm = NULL, call = NULL, lo)

report_is_gtezero(x, x_nm = NULL, call = NULL)

report_is_gtzero(x, x_nm = NULL, call = NULL)

report_is_integer(x, x_nm = NULL, call = NULL)

report_is_language_object(x, x_nm = NULL, call = NULL)

report_is_list(x, x_nm = NULL, call = NULL)

report_is_logical(x, x_nm = NULL, call = NULL)

report_is_lt(x, x_nm = NULL, call = NULL, hi)

report_is_lte(x, x_nm = NULL, call = NULL, hi)

report_is_ltezero(x, x_nm = NULL, call = NULL)

report_is_ltzero(x, x_nm = NULL, call = NULL)

report_is_matrix(x, x_nm = NULL, call = NULL)

report_is_name(x, x_nm = NULL, call = NULL)

report_is_named(x, x_nm = NULL, call = NULL)

report_is_named_list(x, x_nm = NULL, call = NULL)

report_is_nonNA(x, x_nm = NULL, call = NULL)

report_is_NULL(x, x_nm = NULL, call = NULL)

report_is_number(x, x_nm = NULL, call = NULL)

report_is_numeric(x, x_nm = NULL, call = NULL)

report_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

report_is_TRUE(x, x_nm = NULL, call = NULL)

report_is_uniquely_named(x, x_nm = NULL, call = NULL)

report_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

report_is_vector(x, x_nm = NULL, call = NULL)

report_match_regex(x, x_nm = NULL, call = NULL, grepl.arg.list = list())

report_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_input_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_input_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_input_dir_exists(x, x_nm = NULL, call = NULL)

assert_dev_input_file_exists(x, x_nm = NULL, call = NULL)

assert_dev_input_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_dev_input_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_input_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_input_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_dev_input_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_dev_input_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_input_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_dev_input_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_dev_input_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_dev_input_is_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_input_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_input_is_call(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_character_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_data.frame(x, x_nm = NULL, call = NULL)

assert_dev_input_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_input_is_data.table(x, x_nm = NULL, call = NULL)

assert_dev_input_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_input_is_data_table(x, x_nm = NULL, call = NULL)

assert_dev_input_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_input_is_Date(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_double_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_environment(x, x_nm = NULL, call = NULL)

assert_dev_input_is_expression(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_dev_input_is_function(x, x_nm = NULL, call = NULL)

assert_dev_input_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_dev_input_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_dev_input_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_dev_input_is_gtezero(x, x_nm = NULL, call = NULL)

assert_dev_input_is_gtzero(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_language_object(x, x_nm = NULL, call = NULL)

assert_dev_input_is_list(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_dev_input_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_dev_input_is_ltezero(x, x_nm = NULL, call = NULL)

assert_dev_input_is_ltzero(x, x_nm = NULL, call = NULL)

assert_dev_input_is_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_name(x, x_nm = NULL, call = NULL)

assert_dev_input_is_named(x, x_nm = NULL, call = NULL)

assert_dev_input_is_named_list(x, x_nm = NULL, call = NULL)

assert_dev_input_is_nonNA(x, x_nm = NULL, call = NULL)

assert_dev_input_is_NULL(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_number_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_is_numeric(x, x_nm = NULL, call = NULL)

assert_dev_input_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_input_is_report_df(x, x_nm = NULL, call = NULL)

assert_dev_input_is_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_input_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_dev_input_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_dev_input_is_vector(x, x_nm = NULL, call = NULL)

assert_dev_input_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_dev_input_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_interim_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_interim_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_interim_dir_exists(x, x_nm = NULL, call = NULL)

assert_dev_interim_file_exists(x, x_nm = NULL, call = NULL)

assert_dev_interim_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_dev_interim_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_interim_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_interim_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_dev_interim_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_dev_interim_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_interim_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_dev_interim_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_dev_interim_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_interim_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_interim_is_call(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_character_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_data.frame(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_interim_is_data.table(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_interim_is_data_table(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_interim_is_Date(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_double_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_environment(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_expression(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_dev_interim_is_function(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_dev_interim_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_dev_interim_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_dev_interim_is_gtezero(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_gtzero(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_language_object(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_list(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_dev_interim_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_dev_interim_is_ltezero(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_ltzero(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_name(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_named(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_named_list(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_nonNA(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_NULL(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_number_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_numeric(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_interim_is_report_df(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_dev_interim_is_vector(x, x_nm = NULL, call = NULL)

assert_dev_interim_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_dev_interim_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_output_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_output_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_dev_output_dir_exists(x, x_nm = NULL, call = NULL)

assert_dev_output_file_exists(x, x_nm = NULL, call = NULL)

assert_dev_output_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_dev_output_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_output_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_output_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_dev_output_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_dev_output_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_dev_output_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_dev_output_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_dev_output_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_dev_output_is_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_output_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_dev_output_is_call(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_character_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_data.frame(x, x_nm = NULL, call = NULL)

assert_dev_output_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_output_is_data.table(x, x_nm = NULL, call = NULL)

assert_dev_output_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_output_is_data_table(x, x_nm = NULL, call = NULL)

assert_dev_output_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_dev_output_is_Date(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_double_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_environment(x, x_nm = NULL, call = NULL)

assert_dev_output_is_expression(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_dev_output_is_function(x, x_nm = NULL, call = NULL)

assert_dev_output_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_dev_output_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_dev_output_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_dev_output_is_gtezero(x, x_nm = NULL, call = NULL)

assert_dev_output_is_gtzero(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_language_object(x, x_nm = NULL, call = NULL)

assert_dev_output_is_list(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_dev_output_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_dev_output_is_ltezero(x, x_nm = NULL, call = NULL)

assert_dev_output_is_ltzero(x, x_nm = NULL, call = NULL)

assert_dev_output_is_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_name(x, x_nm = NULL, call = NULL)

assert_dev_output_is_named(x, x_nm = NULL, call = NULL)

assert_dev_output_is_named_list(x, x_nm = NULL, call = NULL)

assert_dev_output_is_nonNA(x, x_nm = NULL, call = NULL)

assert_dev_output_is_NULL(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_number_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_is_numeric(x, x_nm = NULL, call = NULL)

assert_dev_output_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_dev_output_is_report_df(x, x_nm = NULL, call = NULL)

assert_dev_output_is_TRUE(x, x_nm = NULL, call = NULL)

assert_dev_output_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_dev_output_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_dev_output_is_vector(x, x_nm = NULL, call = NULL)

assert_dev_output_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_dev_output_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_all_are_TRUE(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_atom_is_in_set(
  x,
  x_nm = NULL,
  call = NULL,
  set,
  assertion_type = "general"
)

assert_dir_exists(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_file_exists(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_has_class(
  x,
  x_nm = NULL,
  call = NULL,
  required_class,
  assertion_type = "general"
)

assert_has_length(
  x,
  x_nm = NULL,
  call = NULL,
  expected_length,
  assertion_type = "general"
)

assert_has_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

assert_has_no_duplicates(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_has_one_of_classes(
  x,
  x_nm = NULL,
  call = NULL,
  classes,
  assertion_type = "general"
)

assert_has_only_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

assert_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_inherits(
  x,
  x_nm = NULL,
  call = NULL,
  required_class,
  assertion_type = "general"
)

assert_is_assertion_type(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_between_exclusive(
  x,
  x_nm = NULL,
  call = NULL,
  lo,
  hi,
  assertion_type = "general"
)

assert_is_between_inclusive(
  x,
  x_nm = NULL,
  call = NULL,
  lo,
  hi,
  assertion_type = "general"
)

assert_is_call(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_character(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_character_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_character_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_character_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_character_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_character_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_character_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_data.frame(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

assert_is_data.table(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

assert_is_data_table(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

assert_is_Date(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_Date_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_Date_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_Date_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_Date_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_Date_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_Date_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_double(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_double_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_double_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_double_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_environment(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_expression(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_factor(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_factor_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_factor_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_factor_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_factor_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_factor_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_factor_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels,
  assertion_type = "general"
)

assert_is_function(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names,
  assertion_type = "general"
)

assert_is_gt(x, x_nm = NULL, call = NULL, lo, assertion_type = "general")

assert_is_gte(x, x_nm = NULL, call = NULL, lo, assertion_type = "general")

assert_is_gtezero(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_gtzero(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_integer(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_integer_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_integer_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_integer_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_language_object(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_list(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_logical(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_logical_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_logical_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_logical_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_logical_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_logical_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_logical_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_lt(x, x_nm = NULL, call = NULL, hi, assertion_type = "general")

assert_is_lte(x, x_nm = NULL, call = NULL, hi, assertion_type = "general")

assert_is_ltezero(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_ltzero(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_name(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_named(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_named_list(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_nonNA(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_NULL(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_number(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_number_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_number_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_number_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_numeric(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_of_length(
  x,
  x_nm = NULL,
  call = NULL,
  expected_length,
  assertion_type = "general"
)

assert_is_report_df(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_TRUE(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_is_uniquely_named(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_uniquely_named_list(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

assert_is_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

assert_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list(),
  assertion_type = "general"
)

assert_vector_elems_are_in_set(
  x,
  x_nm = NULL,
  call = NULL,
  set,
  assertion_type = "general"
)

assert_input_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_input_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_input_dir_exists(x, x_nm = NULL, call = NULL)

assert_input_file_exists(x, x_nm = NULL, call = NULL)

assert_input_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_input_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_input_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_input_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_input_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_input_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_input_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_input_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_input_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_input_is_atom(x, x_nm = NULL, call = NULL)

assert_input_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_input_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_input_is_call(x, x_nm = NULL, call = NULL)

assert_input_is_character(x, x_nm = NULL, call = NULL)

assert_input_is_character_atom(x, x_nm = NULL, call = NULL)

assert_input_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_character_vector(x, x_nm = NULL, call = NULL)

assert_input_is_data.frame(x, x_nm = NULL, call = NULL)

assert_input_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_input_is_data.table(x, x_nm = NULL, call = NULL)

assert_input_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_input_is_data_table(x, x_nm = NULL, call = NULL)

assert_input_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_input_is_Date(x, x_nm = NULL, call = NULL)

assert_input_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_input_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double(x, x_nm = NULL, call = NULL)

assert_input_is_double_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_double_vector(x, x_nm = NULL, call = NULL)

assert_input_is_environment(x, x_nm = NULL, call = NULL)

assert_input_is_expression(x, x_nm = NULL, call = NULL)

assert_input_is_factor(x, x_nm = NULL, call = NULL)

assert_input_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_input_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_input_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_input_is_function(x, x_nm = NULL, call = NULL)

assert_input_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_input_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_input_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_input_is_gtezero(x, x_nm = NULL, call = NULL)

assert_input_is_gtzero(x, x_nm = NULL, call = NULL)

assert_input_is_integer(x, x_nm = NULL, call = NULL)

assert_input_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_input_is_language_object(x, x_nm = NULL, call = NULL)

assert_input_is_list(x, x_nm = NULL, call = NULL)

assert_input_is_logical(x, x_nm = NULL, call = NULL)

assert_input_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_input_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_input_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_input_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_input_is_ltezero(x, x_nm = NULL, call = NULL)

assert_input_is_ltzero(x, x_nm = NULL, call = NULL)

assert_input_is_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_name(x, x_nm = NULL, call = NULL)

assert_input_is_named(x, x_nm = NULL, call = NULL)

assert_input_is_named_list(x, x_nm = NULL, call = NULL)

assert_input_is_nonNA(x, x_nm = NULL, call = NULL)

assert_input_is_NULL(x, x_nm = NULL, call = NULL)

assert_input_is_number(x, x_nm = NULL, call = NULL)

assert_input_is_number_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_input_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_input_is_number_vector(x, x_nm = NULL, call = NULL)

assert_input_is_numeric(x, x_nm = NULL, call = NULL)

assert_input_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_input_is_report_df(x, x_nm = NULL, call = NULL)

assert_input_is_TRUE(x, x_nm = NULL, call = NULL)

assert_input_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_input_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_input_is_vector(x, x_nm = NULL, call = NULL)

assert_input_match_regex(x, x_nm = NULL, call = NULL, grepl.arg.list = list())

assert_input_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_input_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_input_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_input_dir_exists(x, x_nm = NULL, call = NULL)

assert_prod_input_file_exists(x, x_nm = NULL, call = NULL)

assert_prod_input_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_prod_input_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_input_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_input_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_prod_input_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_prod_input_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_input_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_prod_input_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_prod_input_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_prod_input_is_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_input_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_input_is_call(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_character_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_data.frame(x, x_nm = NULL, call = NULL)

assert_prod_input_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_input_is_data.table(x, x_nm = NULL, call = NULL)

assert_prod_input_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_input_is_data_table(x, x_nm = NULL, call = NULL)

assert_prod_input_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_input_is_Date(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_double_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_environment(x, x_nm = NULL, call = NULL)

assert_prod_input_is_expression(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_prod_input_is_function(x, x_nm = NULL, call = NULL)

assert_prod_input_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_prod_input_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_prod_input_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_prod_input_is_gtezero(x, x_nm = NULL, call = NULL)

assert_prod_input_is_gtzero(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_language_object(x, x_nm = NULL, call = NULL)

assert_prod_input_is_list(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_prod_input_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_prod_input_is_ltezero(x, x_nm = NULL, call = NULL)

assert_prod_input_is_ltzero(x, x_nm = NULL, call = NULL)

assert_prod_input_is_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_name(x, x_nm = NULL, call = NULL)

assert_prod_input_is_named(x, x_nm = NULL, call = NULL)

assert_prod_input_is_named_list(x, x_nm = NULL, call = NULL)

assert_prod_input_is_nonNA(x, x_nm = NULL, call = NULL)

assert_prod_input_is_NULL(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_number_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_is_numeric(x, x_nm = NULL, call = NULL)

assert_prod_input_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_input_is_report_df(x, x_nm = NULL, call = NULL)

assert_prod_input_is_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_input_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_prod_input_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_prod_input_is_vector(x, x_nm = NULL, call = NULL)

assert_prod_input_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_prod_input_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_interim_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_interim_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_interim_dir_exists(x, x_nm = NULL, call = NULL)

assert_prod_interim_file_exists(x, x_nm = NULL, call = NULL)

assert_prod_interim_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_prod_interim_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_interim_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_interim_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_prod_interim_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_prod_interim_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_interim_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_prod_interim_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_prod_interim_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_interim_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_interim_is_call(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_character_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_data.frame(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_interim_is_data.table(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_interim_is_data_table(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_interim_is_Date(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_double_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_environment(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_expression(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_prod_interim_is_function(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_prod_interim_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_prod_interim_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_prod_interim_is_gtezero(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_gtzero(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL
)

assert_prod_interim_is_integer_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL
)

assert_prod_interim_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL
)

assert_prod_interim_is_integer_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL
)

assert_prod_interim_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_language_object(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_list(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_prod_interim_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_prod_interim_is_ltezero(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_ltzero(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_name(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_named(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_named_list(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_nonNA(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_NULL(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_number_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_numeric(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_interim_is_report_df(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_prod_interim_is_vector(x, x_nm = NULL, call = NULL)

assert_prod_interim_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_prod_interim_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_output_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_output_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_prod_output_dir_exists(x, x_nm = NULL, call = NULL)

assert_prod_output_file_exists(x, x_nm = NULL, call = NULL)

assert_prod_output_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_prod_output_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_output_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_output_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_prod_output_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_prod_output_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_prod_output_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_prod_output_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_prod_output_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_prod_output_is_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_output_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_prod_output_is_call(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_character_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_data.frame(x, x_nm = NULL, call = NULL)

assert_prod_output_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_output_is_data.table(x, x_nm = NULL, call = NULL)

assert_prod_output_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_output_is_data_table(x, x_nm = NULL, call = NULL)

assert_prod_output_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_prod_output_is_Date(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_double_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_environment(x, x_nm = NULL, call = NULL)

assert_prod_output_is_expression(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_prod_output_is_function(x, x_nm = NULL, call = NULL)

assert_prod_output_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_prod_output_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_prod_output_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_prod_output_is_gtezero(x, x_nm = NULL, call = NULL)

assert_prod_output_is_gtzero(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_language_object(x, x_nm = NULL, call = NULL)

assert_prod_output_is_list(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_prod_output_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_prod_output_is_ltezero(x, x_nm = NULL, call = NULL)

assert_prod_output_is_ltzero(x, x_nm = NULL, call = NULL)

assert_prod_output_is_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_name(x, x_nm = NULL, call = NULL)

assert_prod_output_is_named(x, x_nm = NULL, call = NULL)

assert_prod_output_is_named_list(x, x_nm = NULL, call = NULL)

assert_prod_output_is_nonNA(x, x_nm = NULL, call = NULL)

assert_prod_output_is_NULL(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_number_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_is_numeric(x, x_nm = NULL, call = NULL)

assert_prod_output_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_prod_output_is_report_df(x, x_nm = NULL, call = NULL)

assert_prod_output_is_TRUE(x, x_nm = NULL, call = NULL)

assert_prod_output_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_prod_output_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_prod_output_is_vector(x, x_nm = NULL, call = NULL)

assert_prod_output_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_prod_output_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

report_is_Date_atom(x, x_nm = NULL, call = NULL)

report_is_Date_matrix(x, x_nm = NULL, call = NULL)

report_is_Date_vector(x, x_nm = NULL, call = NULL)

report_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_character_atom(x, x_nm = NULL, call = NULL)

report_is_character_matrix(x, x_nm = NULL, call = NULL)

report_is_character_vector(x, x_nm = NULL, call = NULL)

report_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_double_atom(x, x_nm = NULL, call = NULL)

report_is_double_matrix(x, x_nm = NULL, call = NULL)

report_is_double_vector(x, x_nm = NULL, call = NULL)

report_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

report_is_factor_atom(x, x_nm = NULL, call = NULL)

report_is_factor_matrix(x, x_nm = NULL, call = NULL)

report_is_factor_vector(x, x_nm = NULL, call = NULL)

report_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_integer_atom(x, x_nm = NULL, call = NULL)

report_is_integer_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_vector(x, x_nm = NULL, call = NULL)

report_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

report_is_logical_atom(x, x_nm = NULL, call = NULL)

report_is_logical_matrix(x, x_nm = NULL, call = NULL)

report_is_logical_vector(x, x_nm = NULL, call = NULL)

report_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_number_atom(x, x_nm = NULL, call = NULL)

report_is_number_matrix(x, x_nm = NULL, call = NULL)

report_is_number_vector(x, x_nm = NULL, call = NULL)

report_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

report_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

test_all_are_TRUE(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_atom_is_in_set(
  x,
  x_nm = NULL,
  call = NULL,
  set,
  assertion_type = "general"
)

test_dir_exists(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_file_exists(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_has_class(
  x,
  x_nm = NULL,
  call = NULL,
  required_class,
  assertion_type = "general"
)

test_has_length(
  x,
  x_nm = NULL,
  call = NULL,
  expected_length,
  assertion_type = "general"
)

test_has_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

test_has_no_duplicates(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_has_one_of_classes(
  x,
  x_nm = NULL,
  call = NULL,
  classes,
  assertion_type = "general"
)

test_has_only_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

test_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL,
  assertion_type = "general"
)

test_inherits(
  x,
  x_nm = NULL,
  call = NULL,
  required_class,
  assertion_type = "general"
)

test_is_assertion_type(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_between_exclusive(
  x,
  x_nm = NULL,
  call = NULL,
  lo,
  hi,
  assertion_type = "general"
)

test_is_between_inclusive(
  x,
  x_nm = NULL,
  call = NULL,
  lo,
  hi,
  assertion_type = "general"
)

test_is_call(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_character(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_character_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_character_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_character_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_character_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_character_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_character_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_data.frame(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

test_is_data.table(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

test_is_data_table(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names,
  assertion_type = "general"
)

test_is_Date(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_Date_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_Date_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_Date_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_Date_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_Date_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_Date_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_double(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_double_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_double_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_double_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_double_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_environment(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_expression(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_factor(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_factor_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_factor_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_factor_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_factor_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_factor_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_factor_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels,
  assertion_type = "general"
)

test_is_function(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names,
  assertion_type = "general"
)

test_is_gt(x, x_nm = NULL, call = NULL, lo, assertion_type = "general")

test_is_gte(x, x_nm = NULL, call = NULL, lo, assertion_type = "general")

test_is_gtezero(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_gtzero(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_integer(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_integer_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_integer_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_integer_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_integer_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_language_object(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_list(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_logical(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_logical_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_logical_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_logical_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_logical_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_logical_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_logical_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_lt(x, x_nm = NULL, call = NULL, hi, assertion_type = "general")

test_is_lte(x, x_nm = NULL, call = NULL, hi, assertion_type = "general")

test_is_ltezero(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_ltzero(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_name(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_named(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_named_list(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_nonNA(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_NULL(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_number(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_number_atom(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_number_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_matrix(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_number_nonNA_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_gtzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltezero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltezero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltezero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltzero_atom(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltzero_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_ltzero_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_matrix(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_nonNA_vector(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_number_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_numeric(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_of_length(
  x,
  x_nm = NULL,
  call = NULL,
  expected_length,
  assertion_type = "general"
)

test_is_report_df(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_TRUE(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_uniquely_named(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_is_uniquely_named_list(
  x,
  x_nm = NULL,
  call = NULL,
  assertion_type = "general"
)

test_is_vector(x, x_nm = NULL, call = NULL, assertion_type = "general")

test_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list(),
  assertion_type = "general"
)

test_vector_elems_are_in_set(
  x,
  x_nm = NULL,
  call = NULL,
  set,
  assertion_type = "general"
)

assert_user_input_all_are_TRUE(x, x_nm = NULL, call = NULL)

assert_user_input_atom_is_in_set(x, x_nm = NULL, call = NULL, set)

assert_user_input_dir_exists(x, x_nm = NULL, call = NULL)

assert_user_input_file_exists(x, x_nm = NULL, call = NULL)

assert_user_input_has_class(x, x_nm = NULL, call = NULL, required_class)

assert_user_input_has_length(x, x_nm = NULL, call = NULL, expected_length)

assert_user_input_has_names(x, x_nm = NULL, call = NULL, required_names)

assert_user_input_has_no_duplicates(x, x_nm = NULL, call = NULL)

assert_user_input_has_one_of_classes(x, x_nm = NULL, call = NULL, classes)

assert_user_input_has_only_names(x, x_nm = NULL, call = NULL, required_names)

assert_user_input_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)

assert_user_input_inherits(x, x_nm = NULL, call = NULL, required_class)

assert_user_input_is_assertion_type(x, x_nm = NULL, call = NULL)

assert_user_input_is_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_between_exclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_user_input_is_between_inclusive(x, x_nm = NULL, call = NULL, lo, hi)

assert_user_input_is_call(x, x_nm = NULL, call = NULL)

assert_user_input_is_character(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_character_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_data.frame(x, x_nm = NULL, call = NULL)

assert_user_input_is_data.frame_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_user_input_is_data.table(x, x_nm = NULL, call = NULL)

assert_user_input_is_data.table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_user_input_is_data_table(x, x_nm = NULL, call = NULL)

assert_user_input_is_data_table_with_required_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_names
)

assert_user_input_is_Date(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_Date_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_double_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_environment(x, x_nm = NULL, call = NULL)

assert_user_input_is_expression(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_factor_with_levels(
  x,
  x_nm = NULL,
  call = NULL,
  expected_levels
)

assert_user_input_is_function(x, x_nm = NULL, call = NULL)

assert_user_input_is_function_with_required_argument_names(
  x,
  x_nm = NULL,
  call = NULL,
  required_argument_names
)

assert_user_input_is_gt(x, x_nm = NULL, call = NULL, lo)

assert_user_input_is_gte(x, x_nm = NULL, call = NULL, lo)

assert_user_input_is_gtezero(x, x_nm = NULL, call = NULL)

assert_user_input_is_gtzero(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_integer_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_language_object(x, x_nm = NULL, call = NULL)

assert_user_input_is_list(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_logical_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_lt(x, x_nm = NULL, call = NULL, hi)

assert_user_input_is_lte(x, x_nm = NULL, call = NULL, hi)

assert_user_input_is_ltezero(x, x_nm = NULL, call = NULL)

assert_user_input_is_ltzero(x, x_nm = NULL, call = NULL)

assert_user_input_is_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_name(x, x_nm = NULL, call = NULL)

assert_user_input_is_named(x, x_nm = NULL, call = NULL)

assert_user_input_is_named_list(x, x_nm = NULL, call = NULL)

assert_user_input_is_nonNA(x, x_nm = NULL, call = NULL)

assert_user_input_is_NULL(x, x_nm = NULL, call = NULL)

assert_user_input_is_number(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_gtzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltezero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltezero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltezero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltzero_atom(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltzero_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_ltzero_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_matrix(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_nonNA_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_number_vector(x, x_nm = NULL, call = NULL)

assert_user_input_is_numeric(x, x_nm = NULL, call = NULL)

assert_user_input_is_of_length(x, x_nm = NULL, call = NULL, expected_length)

assert_user_input_is_report_df(x, x_nm = NULL, call = NULL)

assert_user_input_is_TRUE(x, x_nm = NULL, call = NULL)

assert_user_input_is_uniquely_named(x, x_nm = NULL, call = NULL)

assert_user_input_is_uniquely_named_list(x, x_nm = NULL, call = NULL)

assert_user_input_is_vector(x, x_nm = NULL, call = NULL)

assert_user_input_match_regex(
  x,
  x_nm = NULL,
  call = NULL,
  grepl.arg.list = list()
)

assert_user_input_vector_elems_are_in_set(x, x_nm = NULL, call = NULL, set)

identify_invalid_observations(x, report_df)

report_is_one_of(x, x_nm = NULL, call = NULL, funs)

assert_is_one_of(x, x_nm = NULL, funs, call = NULL, assertion_type = "general")

assert_prod_input_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_prod_output_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_prod_interim_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_user_input_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_dev_input_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_dev_interim_is_one_of(x, x_nm = NULL, funs, call = NULL)

assert_dev_output_is_one_of(x, x_nm = NULL, funs, call = NULL)

report_has_only_valid_observations(
  x,
  x_nm = NULL,
  expressions,
  fail_messages = NULL,
  pass_messages = NULL,
  col_nms = names(x),
  col_nm_set_list = NULL,
  call = NULL
)
}
\arguments{
\item{x}{R object to be tested (mandatory, no default)}

\item{x_nm}{\verb{[character]} (optional, default \code{NULL})

see e.g. \link{report_is_atom}}

\item{call}{\verb{[language, NULL]} (optional, default \code{NULL})
\itemize{
\item \code{language}: an R language object such as one produced by \link{match.call} or
\code{quote}; this call will be reported in an error
\item \code{NULL}: the call is attempted to be inferred
}}

\item{set}{\verb{[any vector]} (mandatory, no default)
set of values to compare to}

\item{required_class}{\verb{[character]} (mandatory, no default)
class that object must have}

\item{expected_length}{\verb{[integer]} (mandatory, no default)
length object must have}

\item{required_names}{\verb{[character]} (mandatory, no default)
set of names object must have}

\item{classes}{\verb{[character]} (mandatory, no default)
one or more classes; object must have at least one of these as class}

\item{lo}{\verb{[number]} (mandatory, no default)
lower bound for \code{x}}

\item{hi}{\verb{[number]} (mandatory, no default)
upper bound for \code{x}}

\item{expected_levels}{\verb{[character]} (mandatory, no default)
set of levels factor is required to have}

\item{required_argument_names}{\verb{[character]} (mandatory, no default)

names of arguments that function \code{x} must have}

\item{grepl.arg.list}{\verb{[list]} (default \code{list()})

list of (optional) arguments passed to \verb{[grepl]}}

\item{expressions}{\verb{[character]} (mandatory, no default)

passed to \link{expressions_to_report} as-is}

\item{fail_messages}{\verb{[character]} (optional, default \code{NULL})

passed to \link{expressions_to_report} as-is}

\item{pass_messages}{\verb{[character]} (optional, default \code{NULL})

passed to \link{expressions_to_report} as-is}

\item{col_nms}{\verb{[character]} (optional, default \code{names(x)})

you may limit to such expressions which only use these column names; see
\code{col_nm_set_list}}

\item{col_nm_set_list}{\verb{[NULL, list]} (optional, default \code{NULL})
\itemize{
\item \code{NULL}: all expressions are used
\item \code{list}: must be of length \code{length(expressions)}, where each element is a
character vector of column names; the corresponding test is only run
if \code{all(col_nm_set_list[[i]] \%in\% col_nms)} for all
\verb{i in seq_along(expressions)}. this allows for easy limiting of expressions to run
in when not all of them need to be run.
}}

\item{assertion_type}{\verb{[character]}
(default usually \code{"general"})

Must be exactly one of the following:
\itemize{
\item \code{"general"}: just says that assertions did not pass without information
as to whose fault this was --- just that some object was not as expected
\item \code{"input"}: assertion error messages direct the attention towards the
inputs (arguments) of guilty function
\item \code{"user_input"}: the end-user is directed to adjust their arguments.
\item \code{"prod_input"}: the assertion error is considered to be an internal error,
and the end-user is directed to report it; the inputs of some function
were not as expected
\item \code{"dev_input"}: only the developer is notified (see
\verb{[dbc::set_dev_mode]})
\item \code{"prod_output"}: like \code{"prod_input"}, but the output of some function
was not as expected
\item \code{"dev_output"}: like \code{"prod_output"}, but only raised in development mode
(see \verb{[dbc::set_dev_mode]})
\item \code{"prod_interim"}: like \code{"prod_input"}, but the interim result somewhere
was not as expected
\item \code{"dev_interim"}: like \code{"prod_interim"}, but only raised in development mode
(see \verb{[dbc::set_dev_mode]})
}}

\item{report_df}{\verb{[data.frame]} (mandatory, no default)

a report \code{data.frame} as produced by e.g. \link{expressions_to_report}}

\item{funs}{\verb{[character, list]} (mandatory, no default)

report functions that return a report (data.frame);
\itemize{
\item \code{character}: names of functions that can be found by \verb{[match.fun]}
\item \code{list}: list of functions
}}
}
\value{
\itemize{
\item \code{identify_invalid_observations}: returns a data.frame with columns
\code{is_valid}, \code{fail_test_set}, and \code{fail_message_set}; new columns are
populated based on \code{report_df} contents; the data.frame has \code{nrow(x)} rows
}

\itemize{
\item \code{report_has_invalid_observations}: returns a report \code{data.frame}.
}
}
\description{
Collection of assertion functions which raise an error if the test does not
pass.
}
\details{
\itemize{
\item \code{report_has_invalid_observations} calls \link{expressions_to_report} where the
dataset \code{x} becomes the environment where the expressions are evaluated
(essentially \code{env = as.environment(x)})
}
}
\examples{

df <- data.frame(a = 1:5, b = 1:5)
report_df <- report_has_only_valid_observations(
  x = df,
  expressions = c("a == b", "a == d", "a != b")
)

identify_invalid_observations(x = df, report_df = report_df)
my_var <- 1:3
df1 <- dbc::report_is_one_of(
  my_var,
  funs = list(dbc::report_is_NULL, dbc::report_is_character_nonNA_vector)
)
df2 <- dbc::report_is_NULL(my_var)
df3 <- dbc::report_is_character_nonNA_vector(my_var)
stopifnot(
  identical(names(df1), names(df2)),
  identical(lapply(df1, class), lapply(df2, class)),
  nrow(df1) == 2L,
  nrow(df2) + nrow(df3) > 2L,
  is.na(df1[["error"]])
)

df <- data.frame(a = 1:5, b = 1:5)
report_df <- report_has_only_valid_observations(
  x = df,
  expressions = c("a == b", "a == d", "a != b")
)

# running expressions only for some columns
df <- data.frame(a = 1:5, b = 1:5, c = 1:5)
report_df <- report_has_only_valid_observations(
  x = df,
  expressions = c("a == b", "a == c", "a != b"),
  col_nms = c("a", "b"),
  col_nm_set_list = list(c("a", "b"), c("a", "c"), c("a", "b"))
)
}
